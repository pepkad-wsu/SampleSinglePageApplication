/// 
/// FileStorage
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
using Microsoft.AspNetCore.Mvc;
using SampleSinglePageApplication.EFModels.EFModels;

namespace SampleSinglePageApplication.Web.Controllers
{
	public partial class DataController : ControllerBase
	{

		[HttpGet]
		[Route("~/api/Data/GetFileStorageAuto/{fileStorageId}")]
		public async Task<ActionResult<DataObjects.FileStorage>> GetFileStorageAuto(Guid fileStorageId)
		{
			DataObjects.FileStorage? output = null;

			if (CurrentUser.Admin) {
				output = await da.GetFileStorageAuto(fileStorageId);
				if (output != null && output.TenantId == CurrentUser.TenantId) {
				    return Ok(output);
				} else {
				    return Unauthorized("Access Denied");
				}
			} else {
				return Unauthorized("Access Denied");
			}
		}

		[HttpPost]
		[Route("~/api/Data/GetFileStoragesFilteredAuto/")]
		public async Task<ActionResult<DataObjects.FilterFileStoragesAuto>> GetFileStoragesFilteredAuto(DataObjects.FilterFileStoragesAuto filter)
		{
			if (CurrentUser.Admin) {
				filter.TenantId = CurrentUser.TenantId;
				var output = await da.GetFileStoragesFilteredAuto(filter);
				return Ok(output);
			} else {
				return Unauthorized("Access Denied");
			}
		}

		[HttpGet]
		[Route("~/api/Data/DeleteFileStorageAuto/{fileStorageId}")]
		public async Task<ActionResult<bool>> DeleteFileStorageAuto(Guid fileStorageId)
		{
			if (CurrentUser.Admin) {
				var existing = await da.GetFileStorageAuto(fileStorageId);
				if (existing != null && existing.TenantId == CurrentUser.TenantId) {
					var output = await da.DeleteFileStorageAuto(fileStorageId);
					return Ok(output);
			} else {
					return Unauthorized("Access Denied");
			}
			} else {
				return Unauthorized("Access Denied");
			}
		}

		[HttpPost]
		[Route("~/api/Data/SaveFileStorageAuto/")]
		public async Task<ActionResult<DataObjects.FileStorage>> SaveFileStorageAuto(DataObjects.FileStorage fileStorage)
		{
            DataObjects.FileStorage output = new DataObjects.FileStorage();

            fileStorage.TenantId = CurrentUser.TenantId;
            if (CurrentUser.Admin) {
				output = await da.SaveFileStorageAuto(fileStorage);
				return Ok(output);
            } else {
				return Unauthorized("Access Denied");
            }
		}
    }
}

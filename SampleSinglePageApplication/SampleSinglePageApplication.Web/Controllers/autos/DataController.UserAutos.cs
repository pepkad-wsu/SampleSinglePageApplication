/// 
/// User
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
using Microsoft.AspNetCore.Mvc;
using SampleSinglePageApplication.EFModels.EFModels;

namespace SampleSinglePageApplication.Web.Controllers
{
	public partial class DataController : ControllerBase
	{

		[HttpGet]
		[Route("~/api/Data/GetUserAuto/{userId}")]
		public async Task<ActionResult<DataObjects.User>> GetUserAuto(Guid userId)
		{
			DataObjects.User? output = null;

			if (CurrentUser.Admin) {
				output = await da.GetUserAuto(userId);
				if (output != null && output.TenantId == CurrentUser.TenantId) {
				    return Ok(output);
				} else {
				    return Unauthorized("Access Denied");
				}
			} else {
				return Unauthorized("Access Denied");
			}
		}

		[HttpPost]
		[Route("~/api/Data/GetUsersFilteredAuto/")]
		public async Task<ActionResult<DataObjects.FilterUsersAuto>> GetUsersFilteredAuto(DataObjects.FilterUsersAuto filter)
		{
			if (CurrentUser.Admin) {
				filter.TenantId = CurrentUser.TenantId;
				var output = await da.GetUsersFilteredAuto(filter);
				return Ok(output);
			} else {
				return Unauthorized("Access Denied");
			}
		}

		[HttpGet]
		[Route("~/api/Data/DeleteUserAuto/{userId}")]
		public async Task<ActionResult<bool>> DeleteUserAuto(Guid userId)
		{
			if (CurrentUser.Admin) {
				var existing = await da.GetUserAuto(userId);
				if (existing != null && existing.TenantId == CurrentUser.TenantId) {
					var output = await da.DeleteUserAuto(userId);
					return Ok(output);
			} else {
					return Unauthorized("Access Denied");
			}
			} else {
				return Unauthorized("Access Denied");
			}
		}

		[HttpPost]
		[Route("~/api/Data/SaveUserAuto/")]
		public async Task<ActionResult<DataObjects.User>> SaveUserAuto(DataObjects.User user)
		{
            DataObjects.User output = new DataObjects.User();

            user.TenantId = CurrentUser.TenantId;
            if (CurrentUser.Admin) {
				output = await da.SaveUserAuto(user);
				return Ok(output);
            } else {
				return Unauthorized("Access Denied");
            }
		}
    }
}

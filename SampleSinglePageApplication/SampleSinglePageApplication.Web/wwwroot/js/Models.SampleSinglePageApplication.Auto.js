var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var sampleSinglePageApplicationEnumAutos;
(function (sampleSinglePageApplicationEnumAutos) {
    /// 
    /// SettingType
    /// 
    /// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
    /// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
    ///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
    ///
    /**
     * SettingType
     */
    function ConvertSettingTypeToHumanReadableString(value) {
        var output = "";
        if (tsUtilities.HasValue("" + value)) {
            switch (value) {
                case 0:
                case "0":
                    output = "Boolean";
                    break;
                case 1:
                case "1":
                    output = "DateTime";
                    break;
                case 2:
                case "2":
                    output = "EncryptedText";
                    break;
                case 3:
                case "3":
                    output = "Guid";
                    break;
                case 4:
                case "4":
                    output = "NumberDecimal";
                    break;
                case 5:
                case "5":
                    output = "NumberDouble";
                    break;
                case 6:
                case "6":
                    output = "NumberInt";
                    break;
                case 7:
                case "7":
                    output = "Object";
                    break;
                case 8:
                case "8":
                    output = "Text";
                    break;
                default:
                    break;
            }
        }
        return output;
    }
    sampleSinglePageApplicationEnumAutos.ConvertSettingTypeToHumanReadableString = ConvertSettingTypeToHumanReadableString;
    /**
     * SettingType
     */
    function ConvertSettingTypeToString(value) {
        var output = "";
        if (tsUtilities.HasValue("" + value)) {
            switch (value) {
                case 0:
                case "0":
                    output = "boolean";
                    break;
                case 1:
                case "1":
                    output = "datetime";
                    break;
                case 2:
                case "2":
                    output = "encryptedtext";
                    break;
                case 3:
                case "3":
                    output = "guid";
                    break;
                case 4:
                case "4":
                    output = "numberdecimal";
                    break;
                case 5:
                case "5":
                    output = "numberdouble";
                    break;
                case 6:
                case "6":
                    output = "numberint";
                    break;
                case 7:
                case "7":
                    output = "object";
                    break;
                case 8:
                case "8":
                    output = "text";
                    break;
                default:
                    break;
            }
        }
        return output;
    }
    sampleSinglePageApplicationEnumAutos.ConvertSettingTypeToString = ConvertSettingTypeToString;
    /**
     * SettingType
     */
    function ConvertSettingTypeFromString(value) {
        var output = null;
        if (tsUtilities.HasValue("" + value)) {
            var lowerValue = ("" + value).toLowerCase();
            switch (lowerValue) {
                case "0":
                case "boolean":
                    output = 0;
                    break;
                case "1":
                case "datetime":
                    output = 1;
                    break;
                case "2":
                case "encryptedtext":
                    output = 2;
                    break;
                case "3":
                case "guid":
                    output = 3;
                    break;
                case "4":
                case "numberdecimal":
                    output = 4;
                    break;
                case "5":
                case "numberdouble":
                    output = 5;
                    break;
                case "6":
                case "numberint":
                    output = 6;
                    break;
                case "7":
                case "object":
                    output = 7;
                    break;
                case "8":
                case "text":
                    output = 8;
                    break;
                default:
                    break;
            }
        }
        return output;
    }
    sampleSinglePageApplicationEnumAutos.ConvertSettingTypeFromString = ConvertSettingTypeFromString;
    /**
     * SettingType
     */
    function GetDropdownSettingType(includeDefault) {
        if (includeDefault === void 0) { includeDefault = false; }
        var output = [];
        if (includeDefault) {
            var itemChoose = { name: "Please chose a SettingType", value: null };
            output.push(itemChoose);
        }
        var itemBoolean = { name: "Boolean", value: 0 }; // "boolean":
        output.push(itemBoolean);
        var itemDateTime = { name: "DateTime", value: 1 }; // "datetime":
        output.push(itemDateTime);
        var itemEncryptedText = { name: "EncryptedText", value: 2 }; // "encryptedtext":
        output.push(itemEncryptedText);
        var itemGuid = { name: "Guid", value: 3 }; // "guid":
        output.push(itemGuid);
        var itemNumberDecimal = { name: "NumberDecimal", value: 4 }; // "numberdecimal":
        output.push(itemNumberDecimal);
        var itemNumberDouble = { name: "NumberDouble", value: 5 }; // "numberdouble":
        output.push(itemNumberDouble);
        var itemNumberInt = { name: "NumberInt", value: 6 }; // "numberint":
        output.push(itemNumberInt);
        var itemObject = { name: "Object", value: 7 }; // "object":
        output.push(itemObject);
        var itemText = { name: "Text", value: 8 }; // "text":
        output.push(itemText);
        return output;
    }
    sampleSinglePageApplicationEnumAutos.GetDropdownSettingType = GetDropdownSettingType;
    /// 
    /// SignalRUpdateType
    /// 
    /// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
    /// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
    ///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
    ///
    /**
     * SignalRUpdateType
     */
    function ConvertSignalRUpdateTypeToHumanReadableString(value) {
        var output = "";
        if (tsUtilities.HasValue("" + value)) {
            switch (value) {
                case 0:
                case "0":
                    output = "This";
                    break;
                case 1:
                case "1":
                    output = "That";
                    break;
                case 2:
                case "2":
                    output = "Setting";
                    break;
                case 3:
                case "3":
                    output = "Unknown";
                    break;
                case 4:
                case "4":
                    output = "Files";
                    break;
                case 5:
                case "5":
                    output = "DataMigration";
                    break;
                case 6:
                case "6":
                    output = "Department";
                    break;
                case 7:
                case "7":
                    output = "DepartmentGroup";
                    break;
                case 8:
                case "8":
                    output = "FileStorage";
                    break;
                case 9:
                case "9":
                    output = "Tenant";
                    break;
                case 10:
                case "10":
                    output = "User";
                    break;
                case 11:
                case "11":
                    output = "UserGroup";
                    break;
                default:
                    break;
            }
        }
        return output;
    }
    sampleSinglePageApplicationEnumAutos.ConvertSignalRUpdateTypeToHumanReadableString = ConvertSignalRUpdateTypeToHumanReadableString;
    /**
     * SignalRUpdateType
     */
    function ConvertSignalRUpdateTypeToString(value) {
        var output = "";
        if (tsUtilities.HasValue("" + value)) {
            switch (value) {
                case 0:
                case "0":
                    output = "this";
                    break;
                case 1:
                case "1":
                    output = "that";
                    break;
                case 2:
                case "2":
                    output = "setting";
                    break;
                case 3:
                case "3":
                    output = "unknown";
                    break;
                case 4:
                case "4":
                    output = "files";
                    break;
                case 5:
                case "5":
                    output = "datamigration";
                    break;
                case 6:
                case "6":
                    output = "department";
                    break;
                case 7:
                case "7":
                    output = "departmentgroup";
                    break;
                case 8:
                case "8":
                    output = "filestorage";
                    break;
                case 9:
                case "9":
                    output = "tenant";
                    break;
                case 10:
                case "10":
                    output = "user";
                    break;
                case 11:
                case "11":
                    output = "usergroup";
                    break;
                default:
                    break;
            }
        }
        return output;
    }
    sampleSinglePageApplicationEnumAutos.ConvertSignalRUpdateTypeToString = ConvertSignalRUpdateTypeToString;
    /**
     * SignalRUpdateType
     */
    function ConvertSignalRUpdateTypeFromString(value) {
        var output = null;
        if (tsUtilities.HasValue("" + value)) {
            var lowerValue = ("" + value).toLowerCase();
            switch (lowerValue) {
                case "0":
                case "this":
                    output = 0;
                    break;
                case "1":
                case "that":
                    output = 1;
                    break;
                case "2":
                case "setting":
                    output = 2;
                    break;
                case "3":
                case "unknown":
                    output = 3;
                    break;
                case "4":
                case "files":
                    output = 4;
                    break;
                case "5":
                case "datamigration":
                    output = 5;
                    break;
                case "6":
                case "department":
                    output = 6;
                    break;
                case "7":
                case "departmentgroup":
                    output = 7;
                    break;
                case "8":
                case "filestorage":
                    output = 8;
                    break;
                case "9":
                case "tenant":
                    output = 9;
                    break;
                case "10":
                case "user":
                    output = 10;
                    break;
                case "11":
                case "usergroup":
                    output = 11;
                    break;
                default:
                    break;
            }
        }
        return output;
    }
    sampleSinglePageApplicationEnumAutos.ConvertSignalRUpdateTypeFromString = ConvertSignalRUpdateTypeFromString;
    /**
     * SignalRUpdateType
     */
    function GetDropdownSignalRUpdateType(includeDefault) {
        if (includeDefault === void 0) { includeDefault = false; }
        var output = [];
        if (includeDefault) {
            var itemChoose = { name: "Please chose a SignalRUpdateType", value: null };
            output.push(itemChoose);
        }
        var itemThis = { name: "This", value: 0 }; // "this":
        output.push(itemThis);
        var itemThat = { name: "That", value: 1 }; // "that":
        output.push(itemThat);
        var itemSetting = { name: "Setting", value: 2 }; // "setting":
        output.push(itemSetting);
        var itemUnknown = { name: "Unknown", value: 3 }; // "unknown":
        output.push(itemUnknown);
        var itemFiles = { name: "Files", value: 4 }; // "files":
        output.push(itemFiles);
        var itemDataMigration = { name: "DataMigration", value: 5 }; // "datamigration":
        output.push(itemDataMigration);
        var itemDepartment = { name: "Department", value: 6 }; // "department":
        output.push(itemDepartment);
        var itemDepartmentGroup = { name: "DepartmentGroup", value: 7 }; // "departmentgroup":
        output.push(itemDepartmentGroup);
        var itemFileStorage = { name: "FileStorage", value: 8 }; // "filestorage":
        output.push(itemFileStorage);
        var itemTenant = { name: "Tenant", value: 9 }; // "tenant":
        output.push(itemTenant);
        var itemUser = { name: "User", value: 10 }; // "user":
        output.push(itemUser);
        var itemUserGroup = { name: "UserGroup", value: 11 }; // "usergroup":
        output.push(itemUserGroup);
        return output;
    }
    sampleSinglePageApplicationEnumAutos.GetDropdownSignalRUpdateType = GetDropdownSignalRUpdateType;
    /// 
    /// UserLookupType
    /// 
    /// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
    /// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
    ///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
    ///
    /**
     * UserLookupType
     */
    function ConvertUserLookupTypeToHumanReadableString(value) {
        var output = "";
        if (tsUtilities.HasValue("" + value)) {
            switch (value) {
                case 0:
                case "0":
                    output = "Email";
                    break;
                case 1:
                case "1":
                    output = "EmployeeId";
                    break;
                case 2:
                case "2":
                    output = "Guid";
                    break;
                case 3:
                case "3":
                    output = "Username";
                    break;
                default:
                    break;
            }
        }
        return output;
    }
    sampleSinglePageApplicationEnumAutos.ConvertUserLookupTypeToHumanReadableString = ConvertUserLookupTypeToHumanReadableString;
    /**
     * UserLookupType
     */
    function ConvertUserLookupTypeToString(value) {
        var output = "";
        if (tsUtilities.HasValue("" + value)) {
            switch (value) {
                case 0:
                case "0":
                    output = "email";
                    break;
                case 1:
                case "1":
                    output = "employeeid";
                    break;
                case 2:
                case "2":
                    output = "guid";
                    break;
                case 3:
                case "3":
                    output = "username";
                    break;
                default:
                    break;
            }
        }
        return output;
    }
    sampleSinglePageApplicationEnumAutos.ConvertUserLookupTypeToString = ConvertUserLookupTypeToString;
    /**
     * UserLookupType
     */
    function ConvertUserLookupTypeFromString(value) {
        var output = null;
        if (tsUtilities.HasValue("" + value)) {
            var lowerValue = ("" + value).toLowerCase();
            switch (lowerValue) {
                case "0":
                case "email":
                    output = 0;
                    break;
                case "1":
                case "employeeid":
                    output = 1;
                    break;
                case "2":
                case "guid":
                    output = 2;
                    break;
                case "3":
                case "username":
                    output = 3;
                    break;
                default:
                    break;
            }
        }
        return output;
    }
    sampleSinglePageApplicationEnumAutos.ConvertUserLookupTypeFromString = ConvertUserLookupTypeFromString;
    /**
     * UserLookupType
     */
    function GetDropdownUserLookupType(includeDefault) {
        if (includeDefault === void 0) { includeDefault = false; }
        var output = [];
        if (includeDefault) {
            var itemChoose = { name: "Please chose a UserLookupType", value: null };
            output.push(itemChoose);
        }
        var itemEmail = { name: "Email", value: 0 }; // "email":
        output.push(itemEmail);
        var itemEmployeeId = { name: "EmployeeId", value: 1 }; // "employeeid":
        output.push(itemEmployeeId);
        var itemGuid = { name: "Guid", value: 2 }; // "guid":
        output.push(itemGuid);
        var itemUsername = { name: "Username", value: 3 }; // "username":
        output.push(itemUsername);
        return output;
    }
    sampleSinglePageApplicationEnumAutos.GetDropdownUserLookupType = GetDropdownUserLookupType;
})(sampleSinglePageApplicationEnumAutos || (sampleSinglePageApplicationEnumAutos = {}));
/// 
///  // SampleSinglePageApplication.DataObjects+ActionResponseObject
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var actionResponseObject = /** @class */ (function () {
    function actionResponseObject() {
        this.actionResponse = ko.observable(new booleanResponse); //SampleSinglePageApplication.DataObjects+BooleanResponse: ActionResponse
    }
    actionResponseObject.prototype.Load = function (data) {
        if (data != null) {
            this.actionResponse().Load(data.actionResponse);
        }
        else {
            this.actionResponse(new booleanResponse);
        }
    };
    return actionResponseObject;
}());
/// 
///  // SampleSinglePageApplication.DataObjects+ActiveDirectorySearchResults
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var activeDirectorySearchResults = /** @class */ (function () {
    function activeDirectorySearchResults() {
        this.tenantId = ko.observable(null); //System.Guid: TenantId
        this.userId = ko.observable(null); //System.Nullable`1[System.Guid]: UserId
        this.firstName = ko.observable(null); //System.String: FirstName
        this.lastName = ko.observable(null); //System.String: LastName
        this.email = ko.observable(null); //System.String: Email
        this.department = ko.observable(null); //System.String: Department
        this.location = ko.observable(null); //System.String: Location
    }
    activeDirectorySearchResults.prototype.Load = function (data) {
        if (data != null) {
            this.tenantId(data.tenantId);
            this.userId(data.userId);
            this.firstName(data.firstName);
            this.lastName(data.lastName);
            this.email(data.email);
            this.department(data.department);
            this.location(data.location);
        }
        else {
            this.tenantId(null);
            this.userId(null);
            this.firstName(null);
            this.lastName(null);
            this.email(null);
            this.department(null);
            this.location(null);
        }
    };
    return activeDirectorySearchResults;
}());
/// 
///  // SampleSinglePageApplication.DataObjects+ActiveDirectoryUserInfo
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var activeDirectoryUserInfo = /** @class */ (function () {
    function activeDirectoryUserInfo() {
        this.tenantId = ko.observable(null); //System.Guid: TenantId
        this.userId = ko.observable(null); //System.Nullable`1[System.Guid]: UserId
        this.department = ko.observable(null); //System.String: Department
        this.username = ko.observable(null); //System.String: Username
        this.firstName = ko.observable(null); //System.String: FirstName
        this.lastName = ko.observable(null); //System.String: LastName
        this.email = ko.observable(null); //System.String: Email
        this.phone = ko.observable(null); //System.String: Phone
        this.employeeId = ko.observable(null); //System.String: EmployeeId
        this.title = ko.observable(null); //System.String: Title
        this.location = ko.observable(null); //System.String: Location
    }
    activeDirectoryUserInfo.prototype.Load = function (data) {
        if (data != null) {
            this.tenantId(data.tenantId);
            this.userId(data.userId);
            this.department(data.department);
            this.username(data.username);
            this.firstName(data.firstName);
            this.lastName(data.lastName);
            this.email(data.email);
            this.phone(data.phone);
            this.employeeId(data.employeeId);
            this.title(data.title);
            this.location(data.location);
        }
        else {
            this.tenantId(null);
            this.userId(null);
            this.department(null);
            this.username(null);
            this.firstName(null);
            this.lastName(null);
            this.email(null);
            this.phone(null);
            this.employeeId(null);
            this.title(null);
            this.location(null);
        }
    };
    return activeDirectoryUserInfo;
}());
/// 
///  // SampleSinglePageApplication.DataObjects+AddModule
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var addModule = /** @class */ (function () {
    function addModule() {
        this.module = ko.observable(null); //System.String: Module
        this.name = ko.observable(null); //System.String: Name
    }
    addModule.prototype.Load = function (data) {
        if (data != null) {
            this.module(data.module);
            this.name(data.name);
        }
        else {
            this.module(null);
            this.name(null);
        }
    };
    return addModule;
}());
/// 
///  // SampleSinglePageApplication.DataObjects+AjaxLookup
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var ajaxLookup = /** @class */ (function (_super) {
    __extends(ajaxLookup, _super);
    function ajaxLookup() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tenantId = ko.observable(null); //System.Guid: TenantId
        _this.search = ko.observable(null); //System.String: Search
        _this.parameters = ko.observableArray([]); //System.Collections.Generic.List`1[System.String]: Parameters
        _this.results = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+AjaxResults]: Results
        return _this;
    }
    ajaxLookup.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.tenantId(data.tenantId);
            this.search(data.search);
            this.parameters(data.parameters);
            var __results_1 = [];
            if (data.results != null) {
                data.results.forEach(function (e) {
                    var item = new ajaxResults();
                    item.Load(e);
                    __results_1.push(item);
                });
            }
            this.results(__results_1);
        }
        else {
            this.tenantId(null);
            this.search(null);
            this.parameters([]);
            this.results([]);
        }
    };
    return ajaxLookup;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+AjaxResults
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var ajaxResults = /** @class */ (function () {
    function ajaxResults() {
        this.label = ko.observable(null); //System.String: label
        this.value = ko.observable(null); //System.String: value
        this.email = ko.observable(null); //System.String: email
        this.username = ko.observable(null); //System.String: username
        this.extra1 = ko.observable(null); //System.String: extra1
        this.extra2 = ko.observable(null); //System.String: extra2
        this.extra3 = ko.observable(null); //System.String: extra3
    }
    ajaxResults.prototype.Load = function (data) {
        if (data != null) {
            this.label(data.label);
            this.value(data.value);
            this.email(data.email);
            this.username(data.username);
            this.extra1(data.extra1);
            this.extra2(data.extra2);
            this.extra3(data.extra3);
        }
        else {
            this.label(null);
            this.value(null);
            this.email(null);
            this.username(null);
            this.extra1(null);
            this.extra2(null);
            this.extra3(null);
        }
    };
    return ajaxResults;
}());
/// 
///  // SampleSinglePageApplication.DataObjects+ApplicationSettings
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var applicationSettings = /** @class */ (function (_super) {
    __extends(applicationSettings, _super);
    function applicationSettings() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.applicationURL = ko.observable(null); //System.String: ApplicationURL
        _this.defaultTenantCode = ko.observable(null); //System.String: DefaultTenantCode
        _this.encryptionKey = ko.observable(null); //System.String: EncryptionKey
        _this.mailServer = ko.observable(null); //System.String: MailServer
        _this.mailServerPassword = ko.observable(null); //System.String: MailServerPassword
        _this.mailServerPort = ko.observable(null); //System.Nullable`1[System.Int32]: MailServerPort
        _this.mailServerUsername = ko.observable(null); //System.String: MailServerUsername
        _this.mailServerUseSSL = ko.observable(false); //System.Boolean: MailServerUseSSL
        _this.defaultReplyToAddress = ko.observable(null); //System.String: DefaultReplyToAddress
        _this.useTenantCodeInUrl = ko.observable(false); //System.Boolean: UseTenantCodeInUrl
        _this.showTenantCodeFieldOnLoginForm = ko.observable(false); //System.Boolean: ShowTenantCodeFieldOnLoginForm
        _this.showTenantListingWhenMissingTenantCode = ko.observable(false); //System.Boolean: ShowTenantListingWhenMissingTenantCode
        return _this;
    }
    applicationSettings.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.applicationURL(data.applicationURL);
            this.defaultTenantCode(data.defaultTenantCode);
            this.encryptionKey(data.encryptionKey);
            this.mailServer(data.mailServer);
            this.mailServerPassword(data.mailServerPassword);
            this.mailServerPort(data.mailServerPort);
            this.mailServerUsername(data.mailServerUsername);
            this.mailServerUseSSL(data.mailServerUseSSL);
            this.defaultReplyToAddress(data.defaultReplyToAddress);
            this.useTenantCodeInUrl(data.useTenantCodeInUrl);
            this.showTenantCodeFieldOnLoginForm(data.showTenantCodeFieldOnLoginForm);
            this.showTenantListingWhenMissingTenantCode(data.showTenantListingWhenMissingTenantCode);
        }
        else {
            this.applicationURL(null);
            this.defaultTenantCode(null);
            this.encryptionKey(null);
            this.mailServer(null);
            this.mailServerPassword(null);
            this.mailServerPort(null);
            this.mailServerUsername(null);
            this.mailServerUseSSL(false);
            this.defaultReplyToAddress(null);
            this.useTenantCodeInUrl(false);
            this.showTenantCodeFieldOnLoginForm(false);
            this.showTenantListingWhenMissingTenantCode(false);
        }
    };
    return applicationSettings;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+Authenticate
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var authenticate = /** @class */ (function () {
    function authenticate() {
        this.username = ko.observable(null); //System.String: Username
        this.password = ko.observable(null); //System.String: Password
        this.tenantCode = ko.observable(null); //System.String: TenantCode
    }
    authenticate.prototype.Load = function (data) {
        if (data != null) {
            this.username(data.username);
            this.password(data.password);
            this.tenantCode(data.tenantCode);
        }
        else {
            this.username(null);
            this.password(null);
            this.tenantCode(null);
        }
    };
    return authenticate;
}());
/// 
///  // SampleSinglePageApplication.DataObjects+BooleanResponse
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var booleanResponse = /** @class */ (function () {
    function booleanResponse() {
        this.messages = ko.observableArray([]); //System.Collections.Generic.List`1[System.String]: Messages
        this.result = ko.observable(false); //System.Boolean: Result
    }
    booleanResponse.prototype.Load = function (data) {
        if (data != null) {
            this.messages(data.messages);
            this.result(data.result);
        }
        else {
            this.messages([]);
            this.result(false);
        }
    };
    return booleanResponse;
}());
/// 
///  // SampleSinglePageApplication.DataObjects+ConnectionStringConfig
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var connectionStringConfig = /** @class */ (function (_super) {
    __extends(connectionStringConfig, _super);
    function connectionStringConfig() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.connectionString = ko.observable(null); //System.String: ConnectionString
        _this.databaseType = ko.observable(null); //System.String: DatabaseType
        _this.mySQL_Server = ko.observable(null); //System.String: MySQL_Server
        _this.mySQL_Database = ko.observable(null); //System.String: MySQL_Database
        _this.mySQL_User = ko.observable(null); //System.String: MySQL_User
        _this.mySQL_Password = ko.observable(null); //System.String: MySQL_Password
        _this.postgreSql_Host = ko.observable(null); //System.String: PostgreSql_Host
        _this.postgreSql_Database = ko.observable(null); //System.String: PostgreSql_Database
        _this.postgreSql_Username = ko.observable(null); //System.String: PostgreSql_Username
        _this.postgreSql_Password = ko.observable(null); //System.String: PostgreSql_Password
        _this.sqLiteDatabase = ko.observable(null); //System.String: SQLiteDatabase
        _this.sqlServer_Server = ko.observable(null); //System.String: SqlServer_Server
        _this.sqlServer_Database = ko.observable(null); //System.String: SqlServer_Database
        _this.sqlServer_UserId = ko.observable(null); //System.String: SqlServer_UserId
        _this.sqlServer_Password = ko.observable(null); //System.String: SqlServer_Password
        _this.sqlServer_IntegratedSecurity = ko.observable(false); //System.Boolean: SqlServer_IntegratedSecurity
        _this.sqlServer_PersistSecurityInfo = ko.observable(false); //System.Boolean: SqlServer_PersistSecurityInfo
        _this.sqlServer_TrustServerCertificate = ko.observable(false); //System.Boolean: SqlServer_TrustServerCertificate
        return _this;
    }
    connectionStringConfig.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.connectionString(data.connectionString);
            this.databaseType(data.databaseType);
            this.mySQL_Server(data.mySQL_Server);
            this.mySQL_Database(data.mySQL_Database);
            this.mySQL_User(data.mySQL_User);
            this.mySQL_Password(data.mySQL_Password);
            this.postgreSql_Host(data.postgreSql_Host);
            this.postgreSql_Database(data.postgreSql_Database);
            this.postgreSql_Username(data.postgreSql_Username);
            this.postgreSql_Password(data.postgreSql_Password);
            this.sqLiteDatabase(data.sqLiteDatabase);
            this.sqlServer_Server(data.sqlServer_Server);
            this.sqlServer_Database(data.sqlServer_Database);
            this.sqlServer_UserId(data.sqlServer_UserId);
            this.sqlServer_Password(data.sqlServer_Password);
            this.sqlServer_IntegratedSecurity(data.sqlServer_IntegratedSecurity);
            this.sqlServer_PersistSecurityInfo(data.sqlServer_PersistSecurityInfo);
            this.sqlServer_TrustServerCertificate(data.sqlServer_TrustServerCertificate);
        }
        else {
            this.connectionString(null);
            this.databaseType(null);
            this.mySQL_Server(null);
            this.mySQL_Database(null);
            this.mySQL_User(null);
            this.mySQL_Password(null);
            this.postgreSql_Host(null);
            this.postgreSql_Database(null);
            this.postgreSql_Username(null);
            this.postgreSql_Password(null);
            this.sqLiteDatabase(null);
            this.sqlServer_Server(null);
            this.sqlServer_Database(null);
            this.sqlServer_UserId(null);
            this.sqlServer_Password(null);
            this.sqlServer_IntegratedSecurity(false);
            this.sqlServer_PersistSecurityInfo(false);
            this.sqlServer_TrustServerCertificate(false);
        }
    };
    return connectionStringConfig;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+DataMigration
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var dataMigration = /** @class */ (function (_super) {
    __extends(dataMigration, _super);
    function dataMigration() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.migration = ko.observableArray([]); //System.Collections.Generic.List`1[System.String]: Migration
        _this.migrationId = ko.observable(null); //System.String: MigrationId
        return _this;
    }
    dataMigration.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.migration(data.migration);
            this.migrationId(data.migrationId);
        }
        else {
            this.migration([]);
            this.migrationId(null);
        }
    };
    return dataMigration;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+Department
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var department = /** @class */ (function (_super) {
    __extends(department, _super);
    function department() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.departmentId = ko.observable(null); //System.Guid: DepartmentId
        _this.tenantId = ko.observable(null); //System.Guid: TenantId
        _this.departmentName = ko.observable(null); //System.String: DepartmentName
        _this.activeDirectoryNames = ko.observable(null); //System.String: ActiveDirectoryNames
        _this.enabled = ko.observable(false); //System.Boolean: Enabled
        _this.departmentGroupId = ko.observable(null); //System.Nullable`1[System.Guid]: DepartmentGroupId
        return _this;
    }
    department.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.departmentId(data.departmentId);
            this.tenantId(data.tenantId);
            this.departmentName(data.departmentName);
            this.activeDirectoryNames(data.activeDirectoryNames);
            this.enabled(data.enabled);
            this.departmentGroupId(data.departmentGroupId);
        }
        else {
            this.departmentId(null);
            this.tenantId(null);
            this.departmentName(null);
            this.activeDirectoryNames(null);
            this.enabled(false);
            this.departmentGroupId(null);
        }
    };
    return department;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+DepartmentGroup
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var departmentGroup = /** @class */ (function (_super) {
    __extends(departmentGroup, _super);
    function departmentGroup() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.departmentGroupId = ko.observable(null); //System.Guid: DepartmentGroupId
        _this.tenantId = ko.observable(null); //System.Guid: TenantId
        _this.departmentGroupName = ko.observable(null); //System.String: DepartmentGroupName
        return _this;
    }
    departmentGroup.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.departmentGroupId(data.departmentGroupId);
            this.tenantId(data.tenantId);
            this.departmentGroupName(data.departmentGroupName);
        }
        else {
            this.departmentGroupId(null);
            this.tenantId(null);
            this.departmentGroupName(null);
        }
    };
    return departmentGroup;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+Dictionary
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var dictionary = /** @class */ (function () {
    function dictionary() {
        this.key = ko.observable(null); //System.String: Key
        this.value = ko.observable(null); //System.String: Value
    }
    dictionary.prototype.Load = function (data) {
        if (data != null) {
            this.key(data.key);
            this.value(data.value);
        }
        else {
            this.key(null);
            this.value(null);
        }
    };
    return dictionary;
}());
/// 
///  // SampleSinglePageApplication.DataObjects+DropDownEnum
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var dropDownEnum = /** @class */ (function () {
    function dropDownEnum() {
        this.name = ko.observable(null); //System.String: Name
        this.value = ko.observable(0); //System.Int32: Value
    }
    dropDownEnum.prototype.Load = function (data) {
        if (data != null) {
            this.name(data.name);
            this.value(data.value);
        }
        else {
            this.name(null);
            this.value(0);
        }
    };
    return dropDownEnum;
}());
/// 
///  // SampleSinglePageApplication.DataObjects+EmailMessage
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var emailMessage = /** @class */ (function (_super) {
    __extends(emailMessage, _super);
    function emailMessage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.from = ko.observable(null); //System.String: From
        _this.fromDisplayName = ko.observable(null); //System.String: FromDisplayName
        _this.to = ko.observableArray([]); //System.Collections.Generic.List`1[System.String]: To
        _this.cc = ko.observableArray([]); //System.Collections.Generic.List`1[System.String]: Cc
        _this.bcc = ko.observableArray([]); //System.Collections.Generic.List`1[System.String]: Bcc
        _this.subject = ko.observable(null); //System.String: Subject
        _this.body = ko.observable(null); //System.String: Body
        _this.files = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+FileStorage]: Files
        return _this;
    }
    emailMessage.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.from(data.from);
            this.fromDisplayName(data.fromDisplayName);
            this.to(data.to);
            this.cc(data.cc);
            this.bcc(data.bcc);
            this.subject(data.subject);
            this.body(data.body);
            var __files_1 = [];
            if (data.files != null) {
                data.files.forEach(function (e) {
                    var item = new fileStorage();
                    item.Load(e);
                    __files_1.push(item);
                });
            }
            this.files(__files_1);
        }
        else {
            this.from(null);
            this.fromDisplayName(null);
            this.to([]);
            this.cc([]);
            this.bcc([]);
            this.subject(null);
            this.body(null);
            this.files([]);
        }
    };
    return emailMessage;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+ExternalDataSource
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var externalDataSource = /** @class */ (function () {
    function externalDataSource() {
        this.name = ko.observable(null); //System.String: Name
        this.type = ko.observable(null); //System.String: Type
        this.connectionString = ko.observable(null); //System.String: ConnectionString
        this.source = ko.observable(null); //System.String: Source
        this.sortOrder = ko.observable(0); //System.Int32: SortOrder
        this.active = ko.observable(false); //System.Boolean: Active
    }
    externalDataSource.prototype.Load = function (data) {
        if (data != null) {
            this.name(data.name);
            this.type(data.type);
            this.connectionString(data.connectionString);
            this.source(data.source);
            this.sortOrder(data.sortOrder);
            this.active(data.active);
        }
        else {
            this.name(null);
            this.type(null);
            this.connectionString(null);
            this.source(null);
            this.sortOrder(0);
            this.active(false);
        }
    };
    return externalDataSource;
}());
/// 
///  // SampleSinglePageApplication.DataObjects+FileStorage
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var fileStorage = /** @class */ (function (_super) {
    __extends(fileStorage, _super);
    function fileStorage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.fileId = ko.observable(null); //System.Guid: FileId
        _this.tenantId = ko.observable(null); //System.Guid: TenantId
        _this.itemId = ko.observable(null); //System.Nullable`1[System.Guid]: ItemId
        _this.fileName = ko.observable(null); //System.String: FileName
        _this.extension = ko.observable(null); //System.String: Extension
        _this.sourceFileId = ko.observable(null); //System.String: SourceFileId
        _this.bytes = ko.observable(null); //System.Nullable`1[System.Int64]: Bytes
        _this.value = ko.observableArray([]); //System.Byte[]: Value
        _this.uploadDate = ko.observable(new Date); //System.DateTime: UploadDate
        _this.userId = ko.observable(null); //System.Nullable`1[System.Guid]: UserId
        _this.base64value = ko.observable(null); //System.String: Base64value
        return _this;
    }
    fileStorage.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.fileId(data.fileId);
            this.tenantId(data.tenantId);
            this.itemId(data.itemId);
            this.fileName(data.fileName);
            this.extension(data.extension);
            this.sourceFileId(data.sourceFileId);
            this.bytes(data.bytes);
            this.value(data.value);
            this.uploadDate(data.uploadDate);
            this.userId(data.userId);
            this.base64value(data.base64value);
        }
        else {
            this.fileId(null);
            this.tenantId(null);
            this.itemId(null);
            this.fileName(null);
            this.extension(null);
            this.sourceFileId(null);
            this.bytes(null);
            this.value([]);
            this.uploadDate(new Date);
            this.userId(null);
            this.base64value(null);
        }
    };
    return fileStorage;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+Filter
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var filter = /** @class */ (function (_super) {
    __extends(filter, _super);
    function filter() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tenantId = ko.observable(null); //System.Guid: TenantId
        _this.executionTime = ko.observable(0); //System.Double: ExecutionTime
        _this.showFilters = ko.observable(false); //System.Boolean: ShowFilters
        _this.start = ko.observable(null); //System.Nullable`1[System.DateTime]: Start
        _this.end = ko.observable(null); //System.Nullable`1[System.DateTime]: End
        _this.filterId = ko.observable(null); //System.Nullable`1[System.Guid]: FilterId
        _this.keyword = ko.observable(null); //System.String: Keyword
        _this.sort = ko.observable(null); //System.String: Sort
        _this.sortOrder = ko.observable(null); //System.String: SortOrder
        _this.recordsPerPage = ko.observable(0); //System.Int32: RecordsPerPage
        _this.pageCount = ko.observable(0); //System.Int32: PageCount
        _this.recordCount = ko.observable(0); //System.Int32: RecordCount
        _this.page = ko.observable(0); //System.Int32: Page
        _this.export = ko.observableArray([]); //System.Byte[]: Export
        _this.tenants = ko.observableArray([]); //System.Collections.Generic.List`1[System.Guid]: Tenants
        _this.columns = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+FilterColumn]: Columns
        _this.records = ko.observableArray([]); //System.Object[]: Records
        _this.cultureCode = ko.observable(null); //System.String: CultureCode
        _this.udf01 = ko.observable(null); //System.String: udf01
        _this.udf02 = ko.observable(null); //System.String: udf02
        _this.udf03 = ko.observable(null); //System.String: udf03
        _this.udf04 = ko.observable(null); //System.String: udf04
        _this.udf05 = ko.observable(null); //System.String: udf05
        _this.udf06 = ko.observable(null); //System.String: udf06
        _this.udf07 = ko.observable(null); //System.String: udf07
        _this.udf08 = ko.observable(null); //System.String: udf08
        _this.udf09 = ko.observable(null); //System.String: udf09
        _this.udf10 = ko.observable(null); //System.String: udf10
        return _this;
    }
    filter.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.tenantId(data.tenantId);
            this.executionTime(data.executionTime);
            this.showFilters(data.showFilters);
            this.start(data.start);
            this.end(data.end);
            this.filterId(data.filterId);
            this.keyword(data.keyword);
            this.sort(data.sort);
            this.sortOrder(data.sortOrder);
            this.recordsPerPage(data.recordsPerPage);
            this.pageCount(data.pageCount);
            this.recordCount(data.recordCount);
            this.page(data.page);
            this.export(data.export);
            this.tenants(data.tenants);
            var __columns_1 = [];
            if (data.columns != null) {
                data.columns.forEach(function (e) {
                    var item = new filterColumn();
                    item.Load(e);
                    __columns_1.push(item);
                });
            }
            this.columns(__columns_1);
            this.records(data.records);
            this.cultureCode(data.cultureCode);
            this.udf01(data.udf01);
            this.udf02(data.udf02);
            this.udf03(data.udf03);
            this.udf04(data.udf04);
            this.udf05(data.udf05);
            this.udf06(data.udf06);
            this.udf07(data.udf07);
            this.udf08(data.udf08);
            this.udf09(data.udf09);
            this.udf10(data.udf10);
        }
        else {
            this.tenantId(null);
            this.executionTime(0);
            this.showFilters(false);
            this.start(null);
            this.end(null);
            this.filterId(null);
            this.keyword(null);
            this.sort(null);
            this.sortOrder(null);
            this.recordsPerPage(0);
            this.pageCount(0);
            this.recordCount(0);
            this.page(0);
            this.export([]);
            this.tenants([]);
            this.columns([]);
            this.records([]);
            this.cultureCode(null);
            this.udf01(null);
            this.udf02(null);
            this.udf03(null);
            this.udf04(null);
            this.udf05(null);
            this.udf06(null);
            this.udf07(null);
            this.udf08(null);
            this.udf09(null);
            this.udf10(null);
        }
    };
    return filter;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+FilterColumn
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var filterColumn = /** @class */ (function () {
    function filterColumn() {
        this.align = ko.observable(null); //System.String: Align
        this.label = ko.observable(null); //System.String: Label
        this.tipText = ko.observable(null); //System.String: TipText
        this.dataElementName = ko.observable(null); //System.String: DataElementName
        this.dataType = ko.observable(null); //System.String: DataType
        this.sortable = ko.observable(false); //System.Boolean: Sortable
        this.class = ko.observable(null); //System.String: Class
        this.booleanIcon = ko.observable(null); //System.String: BooleanIcon
    }
    filterColumn.prototype.Load = function (data) {
        if (data != null) {
            this.align(data.align);
            this.label(data.label);
            this.tipText(data.tipText);
            this.dataElementName(data.dataElementName);
            this.dataType(data.dataType);
            this.sortable(data.sortable);
            this.class(data.class);
            this.booleanIcon(data.booleanIcon);
        }
        else {
            this.align(null);
            this.label(null);
            this.tipText(null);
            this.dataElementName(null);
            this.dataType(null);
            this.sortable(false);
            this.class(null);
            this.booleanIcon(null);
        }
    };
    return filterColumn;
}());
/// 
///  // SampleSinglePageApplication.DataObjects+FilterDepartmentGroupsAuto
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var filterDepartmentGroupsAuto = /** @class */ (function (_super) {
    __extends(filterDepartmentGroupsAuto, _super);
    function filterDepartmentGroupsAuto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.departmentGroupId = ko.observable(null); //System.Nullable`1[System.Guid]: DepartmentGroupId
        _this.departmentGroupName = ko.observable(null); //System.String: DepartmentGroupName
        _this.departmentGroupNameFilterExact = ko.observable(false); //System.Boolean: DepartmentGroupNameFilterExact
        _this.departmentGroupNameIncludeInKeyword = ko.observable(false); //System.Boolean: DepartmentGroupNameIncludeInKeyword
        _this.tenantId = ko.observable(null); //System.Guid: TenantId
        _this.executionTime = ko.observable(0); //System.Double: ExecutionTime
        _this.showFilters = ko.observable(false); //System.Boolean: ShowFilters
        _this.start = ko.observable(null); //System.Nullable`1[System.DateTime]: Start
        _this.end = ko.observable(null); //System.Nullable`1[System.DateTime]: End
        _this.filterId = ko.observable(null); //System.Nullable`1[System.Guid]: FilterId
        _this.keyword = ko.observable(null); //System.String: Keyword
        _this.sort = ko.observable(null); //System.String: Sort
        _this.sortOrder = ko.observable(null); //System.String: SortOrder
        _this.recordsPerPage = ko.observable(0); //System.Int32: RecordsPerPage
        _this.pageCount = ko.observable(0); //System.Int32: PageCount
        _this.recordCount = ko.observable(0); //System.Int32: RecordCount
        _this.page = ko.observable(0); //System.Int32: Page
        _this.export = ko.observableArray([]); //System.Byte[]: Export
        _this.tenants = ko.observableArray([]); //System.Collections.Generic.List`1[System.Guid]: Tenants
        _this.columns = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+FilterColumn]: Columns
        _this.records = ko.observableArray([]); //System.Object[]: Records
        _this.cultureCode = ko.observable(null); //System.String: CultureCode
        _this.udf01 = ko.observable(null); //System.String: udf01
        _this.udf02 = ko.observable(null); //System.String: udf02
        _this.udf03 = ko.observable(null); //System.String: udf03
        _this.udf04 = ko.observable(null); //System.String: udf04
        _this.udf05 = ko.observable(null); //System.String: udf05
        _this.udf06 = ko.observable(null); //System.String: udf06
        _this.udf07 = ko.observable(null); //System.String: udf07
        _this.udf08 = ko.observable(null); //System.String: udf08
        _this.udf09 = ko.observable(null); //System.String: udf09
        _this.udf10 = ko.observable(null); //System.String: udf10
        return _this;
    }
    filterDepartmentGroupsAuto.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.departmentGroupId(data.departmentGroupId);
            this.departmentGroupName(data.departmentGroupName);
            this.departmentGroupNameFilterExact(data.departmentGroupNameFilterExact);
            this.departmentGroupNameIncludeInKeyword(data.departmentGroupNameIncludeInKeyword);
            this.tenantId(data.tenantId);
            this.executionTime(data.executionTime);
            this.showFilters(data.showFilters);
            this.start(data.start);
            this.end(data.end);
            this.filterId(data.filterId);
            this.keyword(data.keyword);
            this.sort(data.sort);
            this.sortOrder(data.sortOrder);
            this.recordsPerPage(data.recordsPerPage);
            this.pageCount(data.pageCount);
            this.recordCount(data.recordCount);
            this.page(data.page);
            this.export(data.export);
            this.tenants(data.tenants);
            var __columns_2 = [];
            if (data.columns != null) {
                data.columns.forEach(function (e) {
                    var item = new filterColumn();
                    item.Load(e);
                    __columns_2.push(item);
                });
            }
            this.columns(__columns_2);
            var __records_1 = [];
            if (data.records != null) {
                data.records.forEach(function (e) {
                    var item = new departmentGroup();
                    item.Load(e);
                    __records_1.push(item);
                });
            }
            this.records(__records_1);
            this.cultureCode(data.cultureCode);
            this.udf01(data.udf01);
            this.udf02(data.udf02);
            this.udf03(data.udf03);
            this.udf04(data.udf04);
            this.udf05(data.udf05);
            this.udf06(data.udf06);
            this.udf07(data.udf07);
            this.udf08(data.udf08);
            this.udf09(data.udf09);
            this.udf10(data.udf10);
        }
        else {
            this.departmentGroupId(null);
            this.departmentGroupName(null);
            this.departmentGroupNameFilterExact(false);
            this.departmentGroupNameIncludeInKeyword(false);
            this.tenantId(null);
            this.executionTime(0);
            this.showFilters(false);
            this.start(null);
            this.end(null);
            this.filterId(null);
            this.keyword(null);
            this.sort(null);
            this.sortOrder(null);
            this.recordsPerPage(0);
            this.pageCount(0);
            this.recordCount(0);
            this.page(0);
            this.export([]);
            this.tenants([]);
            this.columns([]);
            this.records([]);
            this.cultureCode(null);
            this.udf01(null);
            this.udf02(null);
            this.udf03(null);
            this.udf04(null);
            this.udf05(null);
            this.udf06(null);
            this.udf07(null);
            this.udf08(null);
            this.udf09(null);
            this.udf10(null);
        }
    };
    return filterDepartmentGroupsAuto;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+FilterDepartmentsAuto
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var filterDepartmentsAuto = /** @class */ (function (_super) {
    __extends(filterDepartmentsAuto, _super);
    function filterDepartmentsAuto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.departmentId = ko.observable(null); //System.Nullable`1[System.Guid]: DepartmentId
        _this.departmentName = ko.observable(null); //System.String: DepartmentName
        _this.departmentNameFilterExact = ko.observable(false); //System.Boolean: DepartmentNameFilterExact
        _this.departmentNameIncludeInKeyword = ko.observable(false); //System.Boolean: DepartmentNameIncludeInKeyword
        _this.activeDirectoryNames = ko.observable(null); //System.String: ActiveDirectoryNames
        _this.activeDirectoryNamesFilterExact = ko.observable(false); //System.Boolean: ActiveDirectoryNamesFilterExact
        _this.activeDirectoryNamesIncludeInKeyword = ko.observable(false); //System.Boolean: ActiveDirectoryNamesIncludeInKeyword
        _this.enabled = ko.observable(""); //System.Nullable`1[System.Boolean]: Enabled
        _this.departmentGroupId = ko.observable(null); //System.Nullable`1[System.Guid]: DepartmentGroupId
        _this.tenantId = ko.observable(null); //System.Guid: TenantId
        _this.executionTime = ko.observable(0); //System.Double: ExecutionTime
        _this.showFilters = ko.observable(false); //System.Boolean: ShowFilters
        _this.start = ko.observable(null); //System.Nullable`1[System.DateTime]: Start
        _this.end = ko.observable(null); //System.Nullable`1[System.DateTime]: End
        _this.filterId = ko.observable(null); //System.Nullable`1[System.Guid]: FilterId
        _this.keyword = ko.observable(null); //System.String: Keyword
        _this.sort = ko.observable(null); //System.String: Sort
        _this.sortOrder = ko.observable(null); //System.String: SortOrder
        _this.recordsPerPage = ko.observable(0); //System.Int32: RecordsPerPage
        _this.pageCount = ko.observable(0); //System.Int32: PageCount
        _this.recordCount = ko.observable(0); //System.Int32: RecordCount
        _this.page = ko.observable(0); //System.Int32: Page
        _this.export = ko.observableArray([]); //System.Byte[]: Export
        _this.tenants = ko.observableArray([]); //System.Collections.Generic.List`1[System.Guid]: Tenants
        _this.columns = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+FilterColumn]: Columns
        _this.records = ko.observableArray([]); //System.Object[]: Records
        _this.cultureCode = ko.observable(null); //System.String: CultureCode
        _this.udf01 = ko.observable(null); //System.String: udf01
        _this.udf02 = ko.observable(null); //System.String: udf02
        _this.udf03 = ko.observable(null); //System.String: udf03
        _this.udf04 = ko.observable(null); //System.String: udf04
        _this.udf05 = ko.observable(null); //System.String: udf05
        _this.udf06 = ko.observable(null); //System.String: udf06
        _this.udf07 = ko.observable(null); //System.String: udf07
        _this.udf08 = ko.observable(null); //System.String: udf08
        _this.udf09 = ko.observable(null); //System.String: udf09
        _this.udf10 = ko.observable(null); //System.String: udf10
        return _this;
    }
    filterDepartmentsAuto.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.departmentId(data.departmentId);
            this.departmentName(data.departmentName);
            this.departmentNameFilterExact(data.departmentNameFilterExact);
            this.departmentNameIncludeInKeyword(data.departmentNameIncludeInKeyword);
            this.activeDirectoryNames(data.activeDirectoryNames);
            this.activeDirectoryNamesFilterExact(data.activeDirectoryNamesFilterExact);
            this.activeDirectoryNamesIncludeInKeyword(data.activeDirectoryNamesIncludeInKeyword);
            this.enabled(autoUtility.ConvertBooleanToString(data.enabled));
            this.departmentGroupId(data.departmentGroupId);
            this.tenantId(data.tenantId);
            this.executionTime(data.executionTime);
            this.showFilters(data.showFilters);
            this.start(data.start);
            this.end(data.end);
            this.filterId(data.filterId);
            this.keyword(data.keyword);
            this.sort(data.sort);
            this.sortOrder(data.sortOrder);
            this.recordsPerPage(data.recordsPerPage);
            this.pageCount(data.pageCount);
            this.recordCount(data.recordCount);
            this.page(data.page);
            this.export(data.export);
            this.tenants(data.tenants);
            var __columns_3 = [];
            if (data.columns != null) {
                data.columns.forEach(function (e) {
                    var item = new filterColumn();
                    item.Load(e);
                    __columns_3.push(item);
                });
            }
            this.columns(__columns_3);
            var __records_2 = [];
            if (data.records != null) {
                data.records.forEach(function (e) {
                    var item = new department();
                    item.Load(e);
                    __records_2.push(item);
                });
            }
            this.records(__records_2);
            this.cultureCode(data.cultureCode);
            this.udf01(data.udf01);
            this.udf02(data.udf02);
            this.udf03(data.udf03);
            this.udf04(data.udf04);
            this.udf05(data.udf05);
            this.udf06(data.udf06);
            this.udf07(data.udf07);
            this.udf08(data.udf08);
            this.udf09(data.udf09);
            this.udf10(data.udf10);
        }
        else {
            this.departmentId(null);
            this.departmentName(null);
            this.departmentNameFilterExact(false);
            this.departmentNameIncludeInKeyword(false);
            this.activeDirectoryNames(null);
            this.activeDirectoryNamesFilterExact(false);
            this.activeDirectoryNamesIncludeInKeyword(false);
            this.enabled(null);
            this.departmentGroupId(null);
            this.tenantId(null);
            this.executionTime(0);
            this.showFilters(false);
            this.start(null);
            this.end(null);
            this.filterId(null);
            this.keyword(null);
            this.sort(null);
            this.sortOrder(null);
            this.recordsPerPage(0);
            this.pageCount(0);
            this.recordCount(0);
            this.page(0);
            this.export([]);
            this.tenants([]);
            this.columns([]);
            this.records([]);
            this.cultureCode(null);
            this.udf01(null);
            this.udf02(null);
            this.udf03(null);
            this.udf04(null);
            this.udf05(null);
            this.udf06(null);
            this.udf07(null);
            this.udf08(null);
            this.udf09(null);
            this.udf10(null);
        }
    };
    return filterDepartmentsAuto;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+FilterFileStoragesAuto
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var filterFileStoragesAuto = /** @class */ (function (_super) {
    __extends(filterFileStoragesAuto, _super);
    function filterFileStoragesAuto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.fileId = ko.observable(null); //System.Nullable`1[System.Guid]: FileId
        _this.itemId = ko.observable(null); //System.Nullable`1[System.Guid]: ItemId
        _this.fileName = ko.observable(null); //System.String: FileName
        _this.fileNameFilterExact = ko.observable(false); //System.Boolean: FileNameFilterExact
        _this.fileNameIncludeInKeyword = ko.observable(false); //System.Boolean: FileNameIncludeInKeyword
        _this.extension = ko.observable(null); //System.String: Extension
        _this.extensionFilterExact = ko.observable(false); //System.Boolean: ExtensionFilterExact
        _this.extensionIncludeInKeyword = ko.observable(false); //System.Boolean: ExtensionIncludeInKeyword
        _this.sourceFileId = ko.observable(null); //System.String: SourceFileId
        _this.sourceFileIdFilterExact = ko.observable(false); //System.Boolean: SourceFileIdFilterExact
        _this.sourceFileIdIncludeInKeyword = ko.observable(false); //System.Boolean: SourceFileIdIncludeInKeyword
        _this.bytes = ko.observable(null); //System.Nullable`1[System.Int64]: Bytes
        _this.uploadDateStart = ko.observable(null); //System.Nullable`1[System.DateTime]: UploadDateStart
        _this.uploadDateEnd = ko.observable(null); //System.Nullable`1[System.DateTime]: UploadDateEnd
        _this.uploadDate = ko.observable(null); //System.Nullable`1[System.DateTime]: UploadDate
        _this.userId = ko.observable(null); //System.Nullable`1[System.Guid]: UserId
        _this.tenantId = ko.observable(null); //System.Guid: TenantId
        _this.executionTime = ko.observable(0); //System.Double: ExecutionTime
        _this.showFilters = ko.observable(false); //System.Boolean: ShowFilters
        _this.start = ko.observable(null); //System.Nullable`1[System.DateTime]: Start
        _this.end = ko.observable(null); //System.Nullable`1[System.DateTime]: End
        _this.filterId = ko.observable(null); //System.Nullable`1[System.Guid]: FilterId
        _this.keyword = ko.observable(null); //System.String: Keyword
        _this.sort = ko.observable(null); //System.String: Sort
        _this.sortOrder = ko.observable(null); //System.String: SortOrder
        _this.recordsPerPage = ko.observable(0); //System.Int32: RecordsPerPage
        _this.pageCount = ko.observable(0); //System.Int32: PageCount
        _this.recordCount = ko.observable(0); //System.Int32: RecordCount
        _this.page = ko.observable(0); //System.Int32: Page
        _this.export = ko.observableArray([]); //System.Byte[]: Export
        _this.tenants = ko.observableArray([]); //System.Collections.Generic.List`1[System.Guid]: Tenants
        _this.columns = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+FilterColumn]: Columns
        _this.records = ko.observableArray([]); //System.Object[]: Records
        _this.cultureCode = ko.observable(null); //System.String: CultureCode
        _this.udf01 = ko.observable(null); //System.String: udf01
        _this.udf02 = ko.observable(null); //System.String: udf02
        _this.udf03 = ko.observable(null); //System.String: udf03
        _this.udf04 = ko.observable(null); //System.String: udf04
        _this.udf05 = ko.observable(null); //System.String: udf05
        _this.udf06 = ko.observable(null); //System.String: udf06
        _this.udf07 = ko.observable(null); //System.String: udf07
        _this.udf08 = ko.observable(null); //System.String: udf08
        _this.udf09 = ko.observable(null); //System.String: udf09
        _this.udf10 = ko.observable(null); //System.String: udf10
        return _this;
    }
    filterFileStoragesAuto.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.fileId(data.fileId);
            this.itemId(data.itemId);
            this.fileName(data.fileName);
            this.fileNameFilterExact(data.fileNameFilterExact);
            this.fileNameIncludeInKeyword(data.fileNameIncludeInKeyword);
            this.extension(data.extension);
            this.extensionFilterExact(data.extensionFilterExact);
            this.extensionIncludeInKeyword(data.extensionIncludeInKeyword);
            this.sourceFileId(data.sourceFileId);
            this.sourceFileIdFilterExact(data.sourceFileIdFilterExact);
            this.sourceFileIdIncludeInKeyword(data.sourceFileIdIncludeInKeyword);
            this.bytes(data.bytes);
            this.uploadDateStart(data.uploadDateStart);
            this.uploadDateEnd(data.uploadDateEnd);
            this.uploadDate(data.uploadDate);
            this.userId(data.userId);
            this.tenantId(data.tenantId);
            this.executionTime(data.executionTime);
            this.showFilters(data.showFilters);
            this.start(data.start);
            this.end(data.end);
            this.filterId(data.filterId);
            this.keyword(data.keyword);
            this.sort(data.sort);
            this.sortOrder(data.sortOrder);
            this.recordsPerPage(data.recordsPerPage);
            this.pageCount(data.pageCount);
            this.recordCount(data.recordCount);
            this.page(data.page);
            this.export(data.export);
            this.tenants(data.tenants);
            var __columns_4 = [];
            if (data.columns != null) {
                data.columns.forEach(function (e) {
                    var item = new filterColumn();
                    item.Load(e);
                    __columns_4.push(item);
                });
            }
            this.columns(__columns_4);
            var __records_3 = [];
            if (data.records != null) {
                data.records.forEach(function (e) {
                    var item = new fileStorage();
                    item.Load(e);
                    __records_3.push(item);
                });
            }
            this.records(__records_3);
            this.cultureCode(data.cultureCode);
            this.udf01(data.udf01);
            this.udf02(data.udf02);
            this.udf03(data.udf03);
            this.udf04(data.udf04);
            this.udf05(data.udf05);
            this.udf06(data.udf06);
            this.udf07(data.udf07);
            this.udf08(data.udf08);
            this.udf09(data.udf09);
            this.udf10(data.udf10);
        }
        else {
            this.fileId(null);
            this.itemId(null);
            this.fileName(null);
            this.fileNameFilterExact(false);
            this.fileNameIncludeInKeyword(false);
            this.extension(null);
            this.extensionFilterExact(false);
            this.extensionIncludeInKeyword(false);
            this.sourceFileId(null);
            this.sourceFileIdFilterExact(false);
            this.sourceFileIdIncludeInKeyword(false);
            this.bytes(null);
            this.uploadDateStart(null);
            this.uploadDateEnd(null);
            this.uploadDate(null);
            this.userId(null);
            this.tenantId(null);
            this.executionTime(0);
            this.showFilters(false);
            this.start(null);
            this.end(null);
            this.filterId(null);
            this.keyword(null);
            this.sort(null);
            this.sortOrder(null);
            this.recordsPerPage(0);
            this.pageCount(0);
            this.recordCount(0);
            this.page(0);
            this.export([]);
            this.tenants([]);
            this.columns([]);
            this.records([]);
            this.cultureCode(null);
            this.udf01(null);
            this.udf02(null);
            this.udf03(null);
            this.udf04(null);
            this.udf05(null);
            this.udf06(null);
            this.udf07(null);
            this.udf08(null);
            this.udf09(null);
            this.udf10(null);
        }
    };
    return filterFileStoragesAuto;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+FilterSettingsAuto
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var filterSettingsAuto = /** @class */ (function (_super) {
    __extends(filterSettingsAuto, _super);
    function filterSettingsAuto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.settingId = ko.observable(null); //System.Nullable`1[System.Int32]: SettingId
        _this.settingName = ko.observable(null); //System.String: SettingName
        _this.settingNameFilterExact = ko.observable(false); //System.Boolean: SettingNameFilterExact
        _this.settingNameIncludeInKeyword = ko.observable(false); //System.Boolean: SettingNameIncludeInKeyword
        _this.settingType = ko.observable(null); //System.String: SettingType
        _this.settingTypeFilterExact = ko.observable(false); //System.Boolean: SettingTypeFilterExact
        _this.settingTypeIncludeInKeyword = ko.observable(false); //System.Boolean: SettingTypeIncludeInKeyword
        _this.settingNotes = ko.observable(null); //System.String: SettingNotes
        _this.settingNotesFilterExact = ko.observable(false); //System.Boolean: SettingNotesFilterExact
        _this.settingNotesIncludeInKeyword = ko.observable(false); //System.Boolean: SettingNotesIncludeInKeyword
        _this.settingText = ko.observable(null); //System.String: SettingText
        _this.settingTextFilterExact = ko.observable(false); //System.Boolean: SettingTextFilterExact
        _this.settingTextIncludeInKeyword = ko.observable(false); //System.Boolean: SettingTextIncludeInKeyword
        _this.userId = ko.observable(null); //System.Nullable`1[System.Guid]: UserId
        _this.tenantId = ko.observable(null); //System.Guid: TenantId
        _this.executionTime = ko.observable(0); //System.Double: ExecutionTime
        _this.showFilters = ko.observable(false); //System.Boolean: ShowFilters
        _this.start = ko.observable(null); //System.Nullable`1[System.DateTime]: Start
        _this.end = ko.observable(null); //System.Nullable`1[System.DateTime]: End
        _this.filterId = ko.observable(null); //System.Nullable`1[System.Guid]: FilterId
        _this.keyword = ko.observable(null); //System.String: Keyword
        _this.sort = ko.observable(null); //System.String: Sort
        _this.sortOrder = ko.observable(null); //System.String: SortOrder
        _this.recordsPerPage = ko.observable(0); //System.Int32: RecordsPerPage
        _this.pageCount = ko.observable(0); //System.Int32: PageCount
        _this.recordCount = ko.observable(0); //System.Int32: RecordCount
        _this.page = ko.observable(0); //System.Int32: Page
        _this.export = ko.observableArray([]); //System.Byte[]: Export
        _this.tenants = ko.observableArray([]); //System.Collections.Generic.List`1[System.Guid]: Tenants
        _this.columns = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+FilterColumn]: Columns
        _this.records = ko.observableArray([]); //System.Object[]: Records
        _this.cultureCode = ko.observable(null); //System.String: CultureCode
        _this.udf01 = ko.observable(null); //System.String: udf01
        _this.udf02 = ko.observable(null); //System.String: udf02
        _this.udf03 = ko.observable(null); //System.String: udf03
        _this.udf04 = ko.observable(null); //System.String: udf04
        _this.udf05 = ko.observable(null); //System.String: udf05
        _this.udf06 = ko.observable(null); //System.String: udf06
        _this.udf07 = ko.observable(null); //System.String: udf07
        _this.udf08 = ko.observable(null); //System.String: udf08
        _this.udf09 = ko.observable(null); //System.String: udf09
        _this.udf10 = ko.observable(null); //System.String: udf10
        return _this;
    }
    filterSettingsAuto.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.settingId(data.settingId);
            this.settingName(data.settingName);
            this.settingNameFilterExact(data.settingNameFilterExact);
            this.settingNameIncludeInKeyword(data.settingNameIncludeInKeyword);
            this.settingType(data.settingType);
            this.settingTypeFilterExact(data.settingTypeFilterExact);
            this.settingTypeIncludeInKeyword(data.settingTypeIncludeInKeyword);
            this.settingNotes(data.settingNotes);
            this.settingNotesFilterExact(data.settingNotesFilterExact);
            this.settingNotesIncludeInKeyword(data.settingNotesIncludeInKeyword);
            this.settingText(data.settingText);
            this.settingTextFilterExact(data.settingTextFilterExact);
            this.settingTextIncludeInKeyword(data.settingTextIncludeInKeyword);
            this.userId(data.userId);
            this.tenantId(data.tenantId);
            this.executionTime(data.executionTime);
            this.showFilters(data.showFilters);
            this.start(data.start);
            this.end(data.end);
            this.filterId(data.filterId);
            this.keyword(data.keyword);
            this.sort(data.sort);
            this.sortOrder(data.sortOrder);
            this.recordsPerPage(data.recordsPerPage);
            this.pageCount(data.pageCount);
            this.recordCount(data.recordCount);
            this.page(data.page);
            this.export(data.export);
            this.tenants(data.tenants);
            var __columns_5 = [];
            if (data.columns != null) {
                data.columns.forEach(function (e) {
                    var item = new filterColumn();
                    item.Load(e);
                    __columns_5.push(item);
                });
            }
            this.columns(__columns_5);
            var __records_4 = [];
            if (data.records != null) {
                data.records.forEach(function (e) {
                    var item = new setting();
                    item.Load(e);
                    __records_4.push(item);
                });
            }
            this.records(__records_4);
            this.cultureCode(data.cultureCode);
            this.udf01(data.udf01);
            this.udf02(data.udf02);
            this.udf03(data.udf03);
            this.udf04(data.udf04);
            this.udf05(data.udf05);
            this.udf06(data.udf06);
            this.udf07(data.udf07);
            this.udf08(data.udf08);
            this.udf09(data.udf09);
            this.udf10(data.udf10);
        }
        else {
            this.settingId(null);
            this.settingName(null);
            this.settingNameFilterExact(false);
            this.settingNameIncludeInKeyword(false);
            this.settingType(null);
            this.settingTypeFilterExact(false);
            this.settingTypeIncludeInKeyword(false);
            this.settingNotes(null);
            this.settingNotesFilterExact(false);
            this.settingNotesIncludeInKeyword(false);
            this.settingText(null);
            this.settingTextFilterExact(false);
            this.settingTextIncludeInKeyword(false);
            this.userId(null);
            this.tenantId(null);
            this.executionTime(0);
            this.showFilters(false);
            this.start(null);
            this.end(null);
            this.filterId(null);
            this.keyword(null);
            this.sort(null);
            this.sortOrder(null);
            this.recordsPerPage(0);
            this.pageCount(0);
            this.recordCount(0);
            this.page(0);
            this.export([]);
            this.tenants([]);
            this.columns([]);
            this.records([]);
            this.cultureCode(null);
            this.udf01(null);
            this.udf02(null);
            this.udf03(null);
            this.udf04(null);
            this.udf05(null);
            this.udf06(null);
            this.udf07(null);
            this.udf08(null);
            this.udf09(null);
            this.udf10(null);
        }
    };
    return filterSettingsAuto;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+FilterTenantsAuto
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var filterTenantsAuto = /** @class */ (function (_super) {
    __extends(filterTenantsAuto, _super);
    function filterTenantsAuto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.name = ko.observable(null); //System.String: Name
        _this.nameFilterExact = ko.observable(false); //System.Boolean: NameFilterExact
        _this.nameIncludeInKeyword = ko.observable(false); //System.Boolean: NameIncludeInKeyword
        _this.tenantCode = ko.observable(null); //System.String: TenantCode
        _this.tenantCodeFilterExact = ko.observable(false); //System.Boolean: TenantCodeFilterExact
        _this.tenantCodeIncludeInKeyword = ko.observable(false); //System.Boolean: TenantCodeIncludeInKeyword
        _this.enabled = ko.observable(""); //System.Nullable`1[System.Boolean]: Enabled
        _this.tenantId = ko.observable(null); //System.Guid: TenantId
        _this.executionTime = ko.observable(0); //System.Double: ExecutionTime
        _this.showFilters = ko.observable(false); //System.Boolean: ShowFilters
        _this.start = ko.observable(null); //System.Nullable`1[System.DateTime]: Start
        _this.end = ko.observable(null); //System.Nullable`1[System.DateTime]: End
        _this.filterId = ko.observable(null); //System.Nullable`1[System.Guid]: FilterId
        _this.keyword = ko.observable(null); //System.String: Keyword
        _this.sort = ko.observable(null); //System.String: Sort
        _this.sortOrder = ko.observable(null); //System.String: SortOrder
        _this.recordsPerPage = ko.observable(0); //System.Int32: RecordsPerPage
        _this.pageCount = ko.observable(0); //System.Int32: PageCount
        _this.recordCount = ko.observable(0); //System.Int32: RecordCount
        _this.page = ko.observable(0); //System.Int32: Page
        _this.export = ko.observableArray([]); //System.Byte[]: Export
        _this.tenants = ko.observableArray([]); //System.Collections.Generic.List`1[System.Guid]: Tenants
        _this.columns = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+FilterColumn]: Columns
        _this.records = ko.observableArray([]); //System.Object[]: Records
        _this.cultureCode = ko.observable(null); //System.String: CultureCode
        _this.udf01 = ko.observable(null); //System.String: udf01
        _this.udf02 = ko.observable(null); //System.String: udf02
        _this.udf03 = ko.observable(null); //System.String: udf03
        _this.udf04 = ko.observable(null); //System.String: udf04
        _this.udf05 = ko.observable(null); //System.String: udf05
        _this.udf06 = ko.observable(null); //System.String: udf06
        _this.udf07 = ko.observable(null); //System.String: udf07
        _this.udf08 = ko.observable(null); //System.String: udf08
        _this.udf09 = ko.observable(null); //System.String: udf09
        _this.udf10 = ko.observable(null); //System.String: udf10
        return _this;
    }
    filterTenantsAuto.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.name(data.name);
            this.nameFilterExact(data.nameFilterExact);
            this.nameIncludeInKeyword(data.nameIncludeInKeyword);
            this.tenantCode(data.tenantCode);
            this.tenantCodeFilterExact(data.tenantCodeFilterExact);
            this.tenantCodeIncludeInKeyword(data.tenantCodeIncludeInKeyword);
            this.enabled(autoUtility.ConvertBooleanToString(data.enabled));
            this.tenantId(data.tenantId);
            this.executionTime(data.executionTime);
            this.showFilters(data.showFilters);
            this.start(data.start);
            this.end(data.end);
            this.filterId(data.filterId);
            this.keyword(data.keyword);
            this.sort(data.sort);
            this.sortOrder(data.sortOrder);
            this.recordsPerPage(data.recordsPerPage);
            this.pageCount(data.pageCount);
            this.recordCount(data.recordCount);
            this.page(data.page);
            this.export(data.export);
            this.tenants(data.tenants);
            var __columns_6 = [];
            if (data.columns != null) {
                data.columns.forEach(function (e) {
                    var item = new filterColumn();
                    item.Load(e);
                    __columns_6.push(item);
                });
            }
            this.columns(__columns_6);
            var __records_5 = [];
            if (data.records != null) {
                data.records.forEach(function (e) {
                    var item = new tenant();
                    item.Load(e);
                    __records_5.push(item);
                });
            }
            this.records(__records_5);
            this.cultureCode(data.cultureCode);
            this.udf01(data.udf01);
            this.udf02(data.udf02);
            this.udf03(data.udf03);
            this.udf04(data.udf04);
            this.udf05(data.udf05);
            this.udf06(data.udf06);
            this.udf07(data.udf07);
            this.udf08(data.udf08);
            this.udf09(data.udf09);
            this.udf10(data.udf10);
        }
        else {
            this.name(null);
            this.nameFilterExact(false);
            this.nameIncludeInKeyword(false);
            this.tenantCode(null);
            this.tenantCodeFilterExact(false);
            this.tenantCodeIncludeInKeyword(false);
            this.enabled(null);
            this.tenantId(null);
            this.executionTime(0);
            this.showFilters(false);
            this.start(null);
            this.end(null);
            this.filterId(null);
            this.keyword(null);
            this.sort(null);
            this.sortOrder(null);
            this.recordsPerPage(0);
            this.pageCount(0);
            this.recordCount(0);
            this.page(0);
            this.export([]);
            this.tenants([]);
            this.columns([]);
            this.records([]);
            this.cultureCode(null);
            this.udf01(null);
            this.udf02(null);
            this.udf03(null);
            this.udf04(null);
            this.udf05(null);
            this.udf06(null);
            this.udf07(null);
            this.udf08(null);
            this.udf09(null);
            this.udf10(null);
        }
    };
    return filterTenantsAuto;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+FilterUserGroupsAuto
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var filterUserGroupsAuto = /** @class */ (function (_super) {
    __extends(filterUserGroupsAuto, _super);
    function filterUserGroupsAuto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.groupId = ko.observable(null); //System.Nullable`1[System.Guid]: GroupId
        _this.name = ko.observable(null); //System.String: Name
        _this.nameFilterExact = ko.observable(false); //System.Boolean: NameFilterExact
        _this.nameIncludeInKeyword = ko.observable(false); //System.Boolean: NameIncludeInKeyword
        _this.enabled = ko.observable(""); //System.Nullable`1[System.Boolean]: Enabled
        _this.settings = ko.observable(new userGroupSettings); //SampleSinglePageApplication.DataObjects+UserGroupSettings: Settings
        _this.tenantId = ko.observable(null); //System.Guid: TenantId
        _this.executionTime = ko.observable(0); //System.Double: ExecutionTime
        _this.showFilters = ko.observable(false); //System.Boolean: ShowFilters
        _this.start = ko.observable(null); //System.Nullable`1[System.DateTime]: Start
        _this.end = ko.observable(null); //System.Nullable`1[System.DateTime]: End
        _this.filterId = ko.observable(null); //System.Nullable`1[System.Guid]: FilterId
        _this.keyword = ko.observable(null); //System.String: Keyword
        _this.sort = ko.observable(null); //System.String: Sort
        _this.sortOrder = ko.observable(null); //System.String: SortOrder
        _this.recordsPerPage = ko.observable(0); //System.Int32: RecordsPerPage
        _this.pageCount = ko.observable(0); //System.Int32: PageCount
        _this.recordCount = ko.observable(0); //System.Int32: RecordCount
        _this.page = ko.observable(0); //System.Int32: Page
        _this.export = ko.observableArray([]); //System.Byte[]: Export
        _this.tenants = ko.observableArray([]); //System.Collections.Generic.List`1[System.Guid]: Tenants
        _this.columns = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+FilterColumn]: Columns
        _this.records = ko.observableArray([]); //System.Object[]: Records
        _this.cultureCode = ko.observable(null); //System.String: CultureCode
        _this.udf01 = ko.observable(null); //System.String: udf01
        _this.udf02 = ko.observable(null); //System.String: udf02
        _this.udf03 = ko.observable(null); //System.String: udf03
        _this.udf04 = ko.observable(null); //System.String: udf04
        _this.udf05 = ko.observable(null); //System.String: udf05
        _this.udf06 = ko.observable(null); //System.String: udf06
        _this.udf07 = ko.observable(null); //System.String: udf07
        _this.udf08 = ko.observable(null); //System.String: udf08
        _this.udf09 = ko.observable(null); //System.String: udf09
        _this.udf10 = ko.observable(null); //System.String: udf10
        return _this;
    }
    filterUserGroupsAuto.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.groupId(data.groupId);
            this.name(data.name);
            this.nameFilterExact(data.nameFilterExact);
            this.nameIncludeInKeyword(data.nameIncludeInKeyword);
            this.enabled(autoUtility.ConvertBooleanToString(data.enabled));
            this.settings().Load(data.settings);
            this.tenantId(data.tenantId);
            this.executionTime(data.executionTime);
            this.showFilters(data.showFilters);
            this.start(data.start);
            this.end(data.end);
            this.filterId(data.filterId);
            this.keyword(data.keyword);
            this.sort(data.sort);
            this.sortOrder(data.sortOrder);
            this.recordsPerPage(data.recordsPerPage);
            this.pageCount(data.pageCount);
            this.recordCount(data.recordCount);
            this.page(data.page);
            this.export(data.export);
            this.tenants(data.tenants);
            var __columns_7 = [];
            if (data.columns != null) {
                data.columns.forEach(function (e) {
                    var item = new filterColumn();
                    item.Load(e);
                    __columns_7.push(item);
                });
            }
            this.columns(__columns_7);
            var __records_6 = [];
            if (data.records != null) {
                data.records.forEach(function (e) {
                    var item = new userGroup();
                    item.Load(e);
                    __records_6.push(item);
                });
            }
            this.records(__records_6);
            this.cultureCode(data.cultureCode);
            this.udf01(data.udf01);
            this.udf02(data.udf02);
            this.udf03(data.udf03);
            this.udf04(data.udf04);
            this.udf05(data.udf05);
            this.udf06(data.udf06);
            this.udf07(data.udf07);
            this.udf08(data.udf08);
            this.udf09(data.udf09);
            this.udf10(data.udf10);
        }
        else {
            this.groupId(null);
            this.name(null);
            this.nameFilterExact(false);
            this.nameIncludeInKeyword(false);
            this.enabled(null);
            this.settings(new userGroupSettings);
            this.tenantId(null);
            this.executionTime(0);
            this.showFilters(false);
            this.start(null);
            this.end(null);
            this.filterId(null);
            this.keyword(null);
            this.sort(null);
            this.sortOrder(null);
            this.recordsPerPage(0);
            this.pageCount(0);
            this.recordCount(0);
            this.page(0);
            this.export([]);
            this.tenants([]);
            this.columns([]);
            this.records([]);
            this.cultureCode(null);
            this.udf01(null);
            this.udf02(null);
            this.udf03(null);
            this.udf04(null);
            this.udf05(null);
            this.udf06(null);
            this.udf07(null);
            this.udf08(null);
            this.udf09(null);
            this.udf10(null);
        }
    };
    return filterUserGroupsAuto;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+FilterUsers
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var filterUsers = /** @class */ (function (_super) {
    __extends(filterUsers, _super);
    function filterUsers() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.loading = ko.observable(null); //System.String: Loading
        _this.filterDepartments = ko.observableArray([]); //System.Collections.Generic.List`1[System.Guid]: FilterDepartments
        _this.enabled = ko.observable(null); //System.String: Enabled
        _this.admin = ko.observable(null); //System.String: Admin
        _this.udf01 = ko.observable(null); //System.String: udf01
        _this.udf02 = ko.observable(null); //System.String: udf02
        _this.udf03 = ko.observable(null); //System.String: udf03
        _this.udf04 = ko.observable(null); //System.String: udf04
        _this.udf05 = ko.observable(null); //System.String: udf05
        _this.udf06 = ko.observable(null); //System.String: udf06
        _this.udf07 = ko.observable(null); //System.String: udf07
        _this.udf08 = ko.observable(null); //System.String: udf08
        _this.udf09 = ko.observable(null); //System.String: udf09
        _this.udf10 = ko.observable(null); //System.String: udf10
        _this.tenantId = ko.observable(null); //System.Guid: TenantId
        _this.executionTime = ko.observable(0); //System.Double: ExecutionTime
        _this.showFilters = ko.observable(false); //System.Boolean: ShowFilters
        _this.start = ko.observable(null); //System.Nullable`1[System.DateTime]: Start
        _this.end = ko.observable(null); //System.Nullable`1[System.DateTime]: End
        _this.filterId = ko.observable(null); //System.Nullable`1[System.Guid]: FilterId
        _this.keyword = ko.observable(null); //System.String: Keyword
        _this.sort = ko.observable(null); //System.String: Sort
        _this.sortOrder = ko.observable(null); //System.String: SortOrder
        _this.recordsPerPage = ko.observable(0); //System.Int32: RecordsPerPage
        _this.pageCount = ko.observable(0); //System.Int32: PageCount
        _this.recordCount = ko.observable(0); //System.Int32: RecordCount
        _this.page = ko.observable(0); //System.Int32: Page
        _this.export = ko.observableArray([]); //System.Byte[]: Export
        _this.tenants = ko.observableArray([]); //System.Collections.Generic.List`1[System.Guid]: Tenants
        _this.columns = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+FilterColumn]: Columns
        _this.records = ko.observableArray([]); //System.Object[]: Records
        _this.cultureCode = ko.observable(null); //System.String: CultureCode
        return _this;
    }
    filterUsers.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.loading(data.loading);
            this.filterDepartments(data.filterDepartments);
            this.enabled(data.enabled);
            this.admin(data.admin);
            this.udf01(data.udf01);
            this.udf02(data.udf02);
            this.udf03(data.udf03);
            this.udf04(data.udf04);
            this.udf05(data.udf05);
            this.udf06(data.udf06);
            this.udf07(data.udf07);
            this.udf08(data.udf08);
            this.udf09(data.udf09);
            this.udf10(data.udf10);
            this.tenantId(data.tenantId);
            this.executionTime(data.executionTime);
            this.showFilters(data.showFilters);
            this.start(data.start);
            this.end(data.end);
            this.filterId(data.filterId);
            this.keyword(data.keyword);
            this.sort(data.sort);
            this.sortOrder(data.sortOrder);
            this.recordsPerPage(data.recordsPerPage);
            this.pageCount(data.pageCount);
            this.recordCount(data.recordCount);
            this.page(data.page);
            this.export(data.export);
            this.tenants(data.tenants);
            var __columns_8 = [];
            if (data.columns != null) {
                data.columns.forEach(function (e) {
                    var item = new filterColumn();
                    item.Load(e);
                    __columns_8.push(item);
                });
            }
            this.columns(__columns_8);
            this.records(data.records);
            this.cultureCode(data.cultureCode);
        }
        else {
            this.loading(null);
            this.filterDepartments([]);
            this.enabled(null);
            this.admin(null);
            this.udf01(null);
            this.udf02(null);
            this.udf03(null);
            this.udf04(null);
            this.udf05(null);
            this.udf06(null);
            this.udf07(null);
            this.udf08(null);
            this.udf09(null);
            this.udf10(null);
            this.tenantId(null);
            this.executionTime(0);
            this.showFilters(false);
            this.start(null);
            this.end(null);
            this.filterId(null);
            this.keyword(null);
            this.sort(null);
            this.sortOrder(null);
            this.recordsPerPage(0);
            this.pageCount(0);
            this.recordCount(0);
            this.page(0);
            this.export([]);
            this.tenants([]);
            this.columns([]);
            this.records([]);
            this.cultureCode(null);
        }
    };
    return filterUsers;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+FilterUsersAuto
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var filterUsersAuto = /** @class */ (function (_super) {
    __extends(filterUsersAuto, _super);
    function filterUsersAuto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.userId = ko.observable(null); //System.Nullable`1[System.Guid]: UserId
        _this.firstName = ko.observable(null); //System.String: FirstName
        _this.firstNameFilterExact = ko.observable(false); //System.Boolean: FirstNameFilterExact
        _this.firstNameIncludeInKeyword = ko.observable(false); //System.Boolean: FirstNameIncludeInKeyword
        _this.lastName = ko.observable(null); //System.String: LastName
        _this.lastNameFilterExact = ko.observable(false); //System.Boolean: LastNameFilterExact
        _this.lastNameIncludeInKeyword = ko.observable(false); //System.Boolean: LastNameIncludeInKeyword
        _this.email = ko.observable(null); //System.String: Email
        _this.emailFilterExact = ko.observable(false); //System.Boolean: EmailFilterExact
        _this.emailIncludeInKeyword = ko.observable(false); //System.Boolean: EmailIncludeInKeyword
        _this.phone = ko.observable(null); //System.String: Phone
        _this.phoneFilterExact = ko.observable(false); //System.Boolean: PhoneFilterExact
        _this.phoneIncludeInKeyword = ko.observable(false); //System.Boolean: PhoneIncludeInKeyword
        _this.username = ko.observable(null); //System.String: Username
        _this.usernameFilterExact = ko.observable(false); //System.Boolean: UsernameFilterExact
        _this.usernameIncludeInKeyword = ko.observable(false); //System.Boolean: UsernameIncludeInKeyword
        _this.employeeId = ko.observable(null); //System.String: EmployeeId
        _this.employeeIdFilterExact = ko.observable(false); //System.Boolean: EmployeeIdFilterExact
        _this.employeeIdIncludeInKeyword = ko.observable(false); //System.Boolean: EmployeeIdIncludeInKeyword
        _this.departmentId = ko.observable(null); //System.Nullable`1[System.Guid]: DepartmentId
        _this.title = ko.observable(null); //System.String: Title
        _this.titleFilterExact = ko.observable(false); //System.Boolean: TitleFilterExact
        _this.titleIncludeInKeyword = ko.observable(false); //System.Boolean: TitleIncludeInKeyword
        _this.location = ko.observable(null); //System.String: Location
        _this.locationFilterExact = ko.observable(false); //System.Boolean: LocationFilterExact
        _this.locationIncludeInKeyword = ko.observable(false); //System.Boolean: LocationIncludeInKeyword
        _this.enabled = ko.observable(""); //System.Nullable`1[System.Boolean]: Enabled
        _this.lastLoginStart = ko.observable(null); //System.Nullable`1[System.DateTime]: LastLoginStart
        _this.lastLoginEnd = ko.observable(null); //System.Nullable`1[System.DateTime]: LastLoginEnd
        _this.lastLogin = ko.observable(null); //System.Nullable`1[System.DateTime]: LastLogin
        _this.admin = ko.observable(""); //System.Nullable`1[System.Boolean]: Admin
        _this.password = ko.observable(null); //System.String: Password
        _this.passwordFilterExact = ko.observable(false); //System.Boolean: PasswordFilterExact
        _this.passwordIncludeInKeyword = ko.observable(false); //System.Boolean: PasswordIncludeInKeyword
        _this.preventPasswordChange = ko.observable(""); //System.Nullable`1[System.Boolean]: PreventPasswordChange
        _this.failedLoginAttempts = ko.observable(null); //System.Nullable`1[System.Int32]: FailedLoginAttempts
        _this.lastLockoutDateStart = ko.observable(null); //System.Nullable`1[System.DateTime]: LastLockoutDateStart
        _this.lastLockoutDateEnd = ko.observable(null); //System.Nullable`1[System.DateTime]: LastLockoutDateEnd
        _this.lastLockoutDate = ko.observable(null); //System.Nullable`1[System.DateTime]: LastLockoutDate
        _this.source = ko.observable(null); //System.String: Source
        _this.sourceFilterExact = ko.observable(false); //System.Boolean: SourceFilterExact
        _this.sourceIncludeInKeyword = ko.observable(false); //System.Boolean: SourceIncludeInKeyword
        _this.tenantId = ko.observable(null); //System.Guid: TenantId
        _this.executionTime = ko.observable(0); //System.Double: ExecutionTime
        _this.showFilters = ko.observable(false); //System.Boolean: ShowFilters
        _this.start = ko.observable(null); //System.Nullable`1[System.DateTime]: Start
        _this.end = ko.observable(null); //System.Nullable`1[System.DateTime]: End
        _this.filterId = ko.observable(null); //System.Nullable`1[System.Guid]: FilterId
        _this.keyword = ko.observable(null); //System.String: Keyword
        _this.sort = ko.observable(null); //System.String: Sort
        _this.sortOrder = ko.observable(null); //System.String: SortOrder
        _this.recordsPerPage = ko.observable(0); //System.Int32: RecordsPerPage
        _this.pageCount = ko.observable(0); //System.Int32: PageCount
        _this.recordCount = ko.observable(0); //System.Int32: RecordCount
        _this.page = ko.observable(0); //System.Int32: Page
        _this.export = ko.observableArray([]); //System.Byte[]: Export
        _this.tenants = ko.observableArray([]); //System.Collections.Generic.List`1[System.Guid]: Tenants
        _this.columns = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+FilterColumn]: Columns
        _this.records = ko.observableArray([]); //System.Object[]: Records
        _this.cultureCode = ko.observable(null); //System.String: CultureCode
        _this.udf01 = ko.observable(null); //System.String: udf01
        _this.udf02 = ko.observable(null); //System.String: udf02
        _this.udf03 = ko.observable(null); //System.String: udf03
        _this.udf04 = ko.observable(null); //System.String: udf04
        _this.udf05 = ko.observable(null); //System.String: udf05
        _this.udf06 = ko.observable(null); //System.String: udf06
        _this.udf07 = ko.observable(null); //System.String: udf07
        _this.udf08 = ko.observable(null); //System.String: udf08
        _this.udf09 = ko.observable(null); //System.String: udf09
        _this.udf10 = ko.observable(null); //System.String: udf10
        return _this;
    }
    filterUsersAuto.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.userId(data.userId);
            this.firstName(data.firstName);
            this.firstNameFilterExact(data.firstNameFilterExact);
            this.firstNameIncludeInKeyword(data.firstNameIncludeInKeyword);
            this.lastName(data.lastName);
            this.lastNameFilterExact(data.lastNameFilterExact);
            this.lastNameIncludeInKeyword(data.lastNameIncludeInKeyword);
            this.email(data.email);
            this.emailFilterExact(data.emailFilterExact);
            this.emailIncludeInKeyword(data.emailIncludeInKeyword);
            this.phone(data.phone);
            this.phoneFilterExact(data.phoneFilterExact);
            this.phoneIncludeInKeyword(data.phoneIncludeInKeyword);
            this.username(data.username);
            this.usernameFilterExact(data.usernameFilterExact);
            this.usernameIncludeInKeyword(data.usernameIncludeInKeyword);
            this.employeeId(data.employeeId);
            this.employeeIdFilterExact(data.employeeIdFilterExact);
            this.employeeIdIncludeInKeyword(data.employeeIdIncludeInKeyword);
            this.departmentId(data.departmentId);
            this.title(data.title);
            this.titleFilterExact(data.titleFilterExact);
            this.titleIncludeInKeyword(data.titleIncludeInKeyword);
            this.location(data.location);
            this.locationFilterExact(data.locationFilterExact);
            this.locationIncludeInKeyword(data.locationIncludeInKeyword);
            this.enabled(autoUtility.ConvertBooleanToString(data.enabled));
            this.lastLoginStart(data.lastLoginStart);
            this.lastLoginEnd(data.lastLoginEnd);
            this.lastLogin(data.lastLogin);
            this.admin(autoUtility.ConvertBooleanToString(data.admin));
            this.password(data.password);
            this.passwordFilterExact(data.passwordFilterExact);
            this.passwordIncludeInKeyword(data.passwordIncludeInKeyword);
            this.preventPasswordChange(autoUtility.ConvertBooleanToString(data.preventPasswordChange));
            this.failedLoginAttempts(data.failedLoginAttempts);
            this.lastLockoutDateStart(data.lastLockoutDateStart);
            this.lastLockoutDateEnd(data.lastLockoutDateEnd);
            this.lastLockoutDate(data.lastLockoutDate);
            this.source(data.source);
            this.sourceFilterExact(data.sourceFilterExact);
            this.sourceIncludeInKeyword(data.sourceIncludeInKeyword);
            this.tenantId(data.tenantId);
            this.executionTime(data.executionTime);
            this.showFilters(data.showFilters);
            this.start(data.start);
            this.end(data.end);
            this.filterId(data.filterId);
            this.keyword(data.keyword);
            this.sort(data.sort);
            this.sortOrder(data.sortOrder);
            this.recordsPerPage(data.recordsPerPage);
            this.pageCount(data.pageCount);
            this.recordCount(data.recordCount);
            this.page(data.page);
            this.export(data.export);
            this.tenants(data.tenants);
            var __columns_9 = [];
            if (data.columns != null) {
                data.columns.forEach(function (e) {
                    var item = new filterColumn();
                    item.Load(e);
                    __columns_9.push(item);
                });
            }
            this.columns(__columns_9);
            var __records_7 = [];
            if (data.records != null) {
                data.records.forEach(function (e) {
                    var item = new user();
                    item.Load(e);
                    __records_7.push(item);
                });
            }
            this.records(__records_7);
            this.cultureCode(data.cultureCode);
            this.udf01(data.udf01);
            this.udf02(data.udf02);
            this.udf03(data.udf03);
            this.udf04(data.udf04);
            this.udf05(data.udf05);
            this.udf06(data.udf06);
            this.udf07(data.udf07);
            this.udf08(data.udf08);
            this.udf09(data.udf09);
            this.udf10(data.udf10);
        }
        else {
            this.userId(null);
            this.firstName(null);
            this.firstNameFilterExact(false);
            this.firstNameIncludeInKeyword(false);
            this.lastName(null);
            this.lastNameFilterExact(false);
            this.lastNameIncludeInKeyword(false);
            this.email(null);
            this.emailFilterExact(false);
            this.emailIncludeInKeyword(false);
            this.phone(null);
            this.phoneFilterExact(false);
            this.phoneIncludeInKeyword(false);
            this.username(null);
            this.usernameFilterExact(false);
            this.usernameIncludeInKeyword(false);
            this.employeeId(null);
            this.employeeIdFilterExact(false);
            this.employeeIdIncludeInKeyword(false);
            this.departmentId(null);
            this.title(null);
            this.titleFilterExact(false);
            this.titleIncludeInKeyword(false);
            this.location(null);
            this.locationFilterExact(false);
            this.locationIncludeInKeyword(false);
            this.enabled(null);
            this.lastLoginStart(null);
            this.lastLoginEnd(null);
            this.lastLogin(null);
            this.admin(null);
            this.password(null);
            this.passwordFilterExact(false);
            this.passwordIncludeInKeyword(false);
            this.preventPasswordChange(null);
            this.failedLoginAttempts(null);
            this.lastLockoutDateStart(null);
            this.lastLockoutDateEnd(null);
            this.lastLockoutDate(null);
            this.source(null);
            this.sourceFilterExact(false);
            this.sourceIncludeInKeyword(false);
            this.tenantId(null);
            this.executionTime(0);
            this.showFilters(false);
            this.start(null);
            this.end(null);
            this.filterId(null);
            this.keyword(null);
            this.sort(null);
            this.sortOrder(null);
            this.recordsPerPage(0);
            this.pageCount(0);
            this.recordCount(0);
            this.page(0);
            this.export([]);
            this.tenants([]);
            this.columns([]);
            this.records([]);
            this.cultureCode(null);
            this.udf01(null);
            this.udf02(null);
            this.udf03(null);
            this.udf04(null);
            this.udf05(null);
            this.udf06(null);
            this.udf07(null);
            this.udf08(null);
            this.udf09(null);
            this.udf10(null);
        }
    };
    return filterUsersAuto;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+Language
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var language = /** @class */ (function () {
    function language() {
        this.culture = ko.observable(null); //System.String: Culture
        this.phrases = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+OptionPair]: Phrases
    }
    language.prototype.Load = function (data) {
        if (data != null) {
            this.culture(data.culture);
            var __phrases_1 = [];
            if (data.phrases != null) {
                data.phrases.forEach(function (e) {
                    var item = new optionPair();
                    item.Load(e);
                    __phrases_1.push(item);
                });
            }
            this.phrases(__phrases_1);
        }
        else {
            this.culture(null);
            this.phrases([]);
        }
    };
    return language;
}());
/// 
///  // SampleSinglePageApplication.DataObjects+ListItem
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var listItem = /** @class */ (function (_super) {
    __extends(listItem, _super);
    function listItem() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.id = ko.observable(null); //System.Guid: Id
        _this.tenantId = ko.observable(null); //System.Guid: TenantId
        _this.type = ko.observable(null); //System.String: Type
        _this.name = ko.observable(null); //System.String: Name
        _this.sortOrder = ko.observable(0); //System.Int32: SortOrder
        _this.enabled = ko.observable(false); //System.Boolean: Enabled
        return _this;
    }
    listItem.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.id(data.id);
            this.tenantId(data.tenantId);
            this.type(data.type);
            this.name(data.name);
            this.sortOrder(data.sortOrder);
            this.enabled(data.enabled);
        }
        else {
            this.id(null);
            this.tenantId(null);
            this.type(null);
            this.name(null);
            this.sortOrder(0);
            this.enabled(false);
        }
    };
    return listItem;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+MailServerConfig
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var mailServerConfig = /** @class */ (function () {
    function mailServerConfig() {
        this.server = ko.observable(null); //System.String: Server
        this.port = ko.observable(0); //System.Int32: Port
        this.useSSL = ko.observable(false); //System.Boolean: UseSSL
        this.username = ko.observable(null); //System.String: Username
        this.password = ko.observable(null); //System.String: Password
    }
    mailServerConfig.prototype.Load = function (data) {
        if (data != null) {
            this.server(data.server);
            this.port(data.port);
            this.useSSL(data.useSSL);
            this.username(data.username);
            this.password(data.password);
        }
        else {
            this.server(null);
            this.port(0);
            this.useSSL(false);
            this.username(null);
            this.password(null);
        }
    };
    return mailServerConfig;
}());
/// 
///  // SampleSinglePageApplication.DataObjects+OptionPair
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var optionPair = /** @class */ (function () {
    function optionPair() {
        this.id = ko.observable(null); //System.String: Id
        this.value = ko.observable(null); //System.String: Value
    }
    optionPair.prototype.Load = function (data) {
        if (data != null) {
            this.id(data.id);
            this.value(data.value);
        }
        else {
            this.id(null);
            this.value(null);
        }
    };
    return optionPair;
}());
/// 
///  // SampleSinglePageApplication.DataObjects+SavedFilterDepartmentGroupsAuto
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var savedFilterDepartmentGroupsAuto = /** @class */ (function (_super) {
    __extends(savedFilterDepartmentGroupsAuto, _super);
    function savedFilterDepartmentGroupsAuto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.description = ko.observable(null); //System.String: Description
        _this.filter = ko.observable(new filterDepartmentGroupsAuto); //SampleSinglePageApplication.DataObjects+FilterDepartmentGroupsAuto: Filter
        _this.savedFilterId = ko.observable(null); //System.Guid: SavedFilterId
        _this.tenantId = ko.observable(null); //System.Guid: TenantId
        _this.userId = ko.observable(null); //System.Guid: UserId
        return _this;
    }
    savedFilterDepartmentGroupsAuto.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.description(data.description);
            this.filter().Load(data.filter);
            this.savedFilterId(data.savedFilterId);
            this.tenantId(data.tenantId);
            this.userId(data.userId);
        }
        else {
            this.description(null);
            this.filter(new filterDepartmentGroupsAuto);
            this.savedFilterId(null);
            this.tenantId(null);
            this.userId(null);
        }
    };
    return savedFilterDepartmentGroupsAuto;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+SavedFilterDepartmentsAuto
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var savedFilterDepartmentsAuto = /** @class */ (function (_super) {
    __extends(savedFilterDepartmentsAuto, _super);
    function savedFilterDepartmentsAuto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.description = ko.observable(null); //System.String: Description
        _this.filter = ko.observable(new filterDepartmentsAuto); //SampleSinglePageApplication.DataObjects+FilterDepartmentsAuto: Filter
        _this.savedFilterId = ko.observable(null); //System.Guid: SavedFilterId
        _this.tenantId = ko.observable(null); //System.Guid: TenantId
        _this.userId = ko.observable(null); //System.Guid: UserId
        return _this;
    }
    savedFilterDepartmentsAuto.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.description(data.description);
            this.filter().Load(data.filter);
            this.savedFilterId(data.savedFilterId);
            this.tenantId(data.tenantId);
            this.userId(data.userId);
        }
        else {
            this.description(null);
            this.filter(new filterDepartmentsAuto);
            this.savedFilterId(null);
            this.tenantId(null);
            this.userId(null);
        }
    };
    return savedFilterDepartmentsAuto;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+SavedFilterFileStoragesAuto
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var savedFilterFileStoragesAuto = /** @class */ (function (_super) {
    __extends(savedFilterFileStoragesAuto, _super);
    function savedFilterFileStoragesAuto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.description = ko.observable(null); //System.String: Description
        _this.filter = ko.observable(new filterFileStoragesAuto); //SampleSinglePageApplication.DataObjects+FilterFileStoragesAuto: Filter
        _this.savedFilterId = ko.observable(null); //System.Guid: SavedFilterId
        _this.tenantId = ko.observable(null); //System.Guid: TenantId
        _this.userId = ko.observable(null); //System.Guid: UserId
        return _this;
    }
    savedFilterFileStoragesAuto.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.description(data.description);
            this.filter().Load(data.filter);
            this.savedFilterId(data.savedFilterId);
            this.tenantId(data.tenantId);
            this.userId(data.userId);
        }
        else {
            this.description(null);
            this.filter(new filterFileStoragesAuto);
            this.savedFilterId(null);
            this.tenantId(null);
            this.userId(null);
        }
    };
    return savedFilterFileStoragesAuto;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+SavedFilterSettingsAuto
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var savedFilterSettingsAuto = /** @class */ (function (_super) {
    __extends(savedFilterSettingsAuto, _super);
    function savedFilterSettingsAuto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.description = ko.observable(null); //System.String: Description
        _this.filter = ko.observable(new filterSettingsAuto); //SampleSinglePageApplication.DataObjects+FilterSettingsAuto: Filter
        _this.savedFilterId = ko.observable(null); //System.Guid: SavedFilterId
        _this.tenantId = ko.observable(null); //System.Guid: TenantId
        _this.userId = ko.observable(null); //System.Guid: UserId
        return _this;
    }
    savedFilterSettingsAuto.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.description(data.description);
            this.filter().Load(data.filter);
            this.savedFilterId(data.savedFilterId);
            this.tenantId(data.tenantId);
            this.userId(data.userId);
        }
        else {
            this.description(null);
            this.filter(new filterSettingsAuto);
            this.savedFilterId(null);
            this.tenantId(null);
            this.userId(null);
        }
    };
    return savedFilterSettingsAuto;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+SavedFilterTenantsAuto
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var savedFilterTenantsAuto = /** @class */ (function (_super) {
    __extends(savedFilterTenantsAuto, _super);
    function savedFilterTenantsAuto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.description = ko.observable(null); //System.String: Description
        _this.filter = ko.observable(new filterTenantsAuto); //SampleSinglePageApplication.DataObjects+FilterTenantsAuto: Filter
        _this.savedFilterId = ko.observable(null); //System.Guid: SavedFilterId
        _this.tenantId = ko.observable(null); //System.Guid: TenantId
        _this.userId = ko.observable(null); //System.Guid: UserId
        return _this;
    }
    savedFilterTenantsAuto.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.description(data.description);
            this.filter().Load(data.filter);
            this.savedFilterId(data.savedFilterId);
            this.tenantId(data.tenantId);
            this.userId(data.userId);
        }
        else {
            this.description(null);
            this.filter(new filterTenantsAuto);
            this.savedFilterId(null);
            this.tenantId(null);
            this.userId(null);
        }
    };
    return savedFilterTenantsAuto;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+SavedFilterUserGroupsAuto
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var savedFilterUserGroupsAuto = /** @class */ (function (_super) {
    __extends(savedFilterUserGroupsAuto, _super);
    function savedFilterUserGroupsAuto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.description = ko.observable(null); //System.String: Description
        _this.filter = ko.observable(new filterUserGroupsAuto); //SampleSinglePageApplication.DataObjects+FilterUserGroupsAuto: Filter
        _this.savedFilterId = ko.observable(null); //System.Guid: SavedFilterId
        _this.tenantId = ko.observable(null); //System.Guid: TenantId
        _this.userId = ko.observable(null); //System.Guid: UserId
        return _this;
    }
    savedFilterUserGroupsAuto.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.description(data.description);
            this.filter().Load(data.filter);
            this.savedFilterId(data.savedFilterId);
            this.tenantId(data.tenantId);
            this.userId(data.userId);
        }
        else {
            this.description(null);
            this.filter(new filterUserGroupsAuto);
            this.savedFilterId(null);
            this.tenantId(null);
            this.userId(null);
        }
    };
    return savedFilterUserGroupsAuto;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+SavedFilterUsersAuto
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var savedFilterUsersAuto = /** @class */ (function (_super) {
    __extends(savedFilterUsersAuto, _super);
    function savedFilterUsersAuto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.description = ko.observable(null); //System.String: Description
        _this.filter = ko.observable(new filterUsersAuto); //SampleSinglePageApplication.DataObjects+FilterUsersAuto: Filter
        _this.savedFilterId = ko.observable(null); //System.Guid: SavedFilterId
        _this.tenantId = ko.observable(null); //System.Guid: TenantId
        _this.userId = ko.observable(null); //System.Guid: UserId
        return _this;
    }
    savedFilterUsersAuto.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.description(data.description);
            this.filter().Load(data.filter);
            this.savedFilterId(data.savedFilterId);
            this.tenantId(data.tenantId);
            this.userId(data.userId);
        }
        else {
            this.description(null);
            this.filter(new filterUsersAuto);
            this.savedFilterId(null);
            this.tenantId(null);
            this.userId(null);
        }
    };
    return savedFilterUsersAuto;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+Setting
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var setting = /** @class */ (function (_super) {
    __extends(setting, _super);
    function setting() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.settingId = ko.observable(0); //System.Int32: SettingId
        _this.settingName = ko.observable(null); //System.String: SettingName
        _this.settingType = ko.observable(null); //System.String: SettingType
        _this.settingNotes = ko.observable(null); //System.String: SettingNotes
        _this.settingText = ko.observable(null); //System.String: SettingText
        _this.tenantId = ko.observable(null); //System.Nullable`1[System.Guid]: TenantId
        _this.userId = ko.observable(null); //System.Nullable`1[System.Guid]: UserId
        return _this;
    }
    setting.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.settingId(data.settingId);
            this.settingName(data.settingName);
            this.settingType(data.settingType);
            this.settingNotes(data.settingNotes);
            this.settingText(data.settingText);
            this.tenantId(data.tenantId);
            this.userId(data.userId);
        }
        else {
            this.settingId(0);
            this.settingName(null);
            this.settingType(null);
            this.settingNotes(null);
            this.settingText(null);
            this.tenantId(null);
            this.userId(null);
        }
    };
    return setting;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+SignalRUpdate
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var signalRUpdate = /** @class */ (function () {
    function signalRUpdate() {
        var _this = this;
        this.tenantId = ko.observable(null); //System.Nullable`1[System.Guid]: TenantId
        this.requestId = ko.observable(null); //System.Nullable`1[System.Guid]: RequestId
        this.itemId = ko.observable(null); //System.String: ItemId
        this.userId = ko.observable(null); //System.Nullable`1[System.Guid]: UserId
        this.updateType = ko.observable(0);
        this.updateTypeLabelAuto = ko.computed(function () {
            var output = null;
            if (_this.updateType() != null) {
                output = sampleSinglePageApplicationEnumAutos.ConvertSignalRUpdateTypeToHumanReadableString(_this.updateType());
            }
            return output;
        });
        this.updateTypeString = ko.observable(null); //System.String: UpdateTypeString
        this.message = ko.observable(null); //System.String: Message
        this.object = ko.observable(null); //System.Object: Object
    }
    signalRUpdate.prototype.Load = function (data) {
        if (data != null) {
            this.tenantId(data.tenantId);
            this.requestId(data.requestId);
            this.itemId(data.itemId);
            this.userId(data.userId);
            this.updateType(data.updateType);
            this.updateTypeString(data.updateTypeString);
            this.message(data.message);
            this.object(data.object);
        }
        else {
            this.tenantId(null);
            this.requestId(null);
            this.itemId(null);
            this.userId(null);
            this.updateType(0);
            this.updateTypeString(null);
            this.message(null);
            this.object(null);
        }
    };
    return signalRUpdate;
}());
/// 
///  // SampleSinglePageApplication.DataObjects+SimplePost
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var simplePost = /** @class */ (function () {
    function simplePost() {
        this.singleItem = ko.observable(null); //System.String: SingleItem
        this.items = ko.observableArray([]); //System.Collections.Generic.List`1[System.String]: Items
    }
    simplePost.prototype.Load = function (data) {
        if (data != null) {
            this.singleItem(data.singleItem);
            this.items(data.items);
        }
        else {
            this.singleItem(null);
            this.items([]);
        }
    };
    return simplePost;
}());
/// 
///  // SampleSinglePageApplication.DataObjects+SimpleResponse
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var simpleResponse = /** @class */ (function () {
    function simpleResponse() {
        this.result = ko.observable(false); //System.Boolean: Result
        this.message = ko.observable(null); //System.String: Message
    }
    simpleResponse.prototype.Load = function (data) {
        if (data != null) {
            this.result(data.result);
            this.message(data.message);
        }
        else {
            this.result(false);
            this.message(null);
        }
    };
    return simpleResponse;
}());
/// 
///  // SampleSinglePageApplication.DataObjects+Tenant
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var tenant = /** @class */ (function (_super) {
    __extends(tenant, _super);
    function tenant() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tenantId = ko.observable(null); //System.Guid: TenantId
        _this.name = ko.observable(null); //System.String: Name
        _this.tenantCode = ko.observable(null); //System.String: TenantCode
        _this.enabled = ko.observable(false); //System.Boolean: Enabled
        _this.departments = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+Department]: Departments
        _this.departmentGroups = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+DepartmentGroup]: DepartmentGroups
        _this.tenantSettings = ko.observable(new tenantSettings); //SampleSinglePageApplication.DataObjects+TenantSettings: TenantSettings
        _this.udfLabels = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+udfLabel]: udfLabels
        _this.listItems = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+ListItem]: ListItems
        return _this;
    }
    tenant.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.tenantId(data.tenantId);
            this.name(data.name);
            this.tenantCode(data.tenantCode);
            this.enabled(data.enabled);
            var __departments_1 = [];
            if (data.departments != null) {
                data.departments.forEach(function (e) {
                    var item = new department();
                    item.Load(e);
                    __departments_1.push(item);
                });
            }
            this.departments(__departments_1);
            var __departmentGroups_1 = [];
            if (data.departmentGroups != null) {
                data.departmentGroups.forEach(function (e) {
                    var item = new departmentGroup();
                    item.Load(e);
                    __departmentGroups_1.push(item);
                });
            }
            this.departmentGroups(__departmentGroups_1);
            this.tenantSettings().Load(data.tenantSettings);
            var __udfLabels_1 = [];
            if (data.udfLabels != null) {
                data.udfLabels.forEach(function (e) {
                    var item = new udfLabel();
                    item.Load(e);
                    __udfLabels_1.push(item);
                });
            }
            this.udfLabels(__udfLabels_1);
            var __listItems_1 = [];
            if (data.listItems != null) {
                data.listItems.forEach(function (e) {
                    var item = new listItem();
                    item.Load(e);
                    __listItems_1.push(item);
                });
            }
            this.listItems(__listItems_1);
        }
        else {
            this.tenantId(null);
            this.name(null);
            this.tenantCode(null);
            this.enabled(false);
            this.departments([]);
            this.departmentGroups([]);
            this.tenantSettings(new tenantSettings);
            this.udfLabels([]);
            this.listItems([]);
        }
    };
    return tenant;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+TenantList
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var tenantList = /** @class */ (function () {
    function tenantList() {
        this.tenantId = ko.observable(null); //System.Guid: TenantId
        this.name = ko.observable(null); //System.String: Name
        this.tenantCode = ko.observable(null); //System.String: TenantCode
    }
    tenantList.prototype.Load = function (data) {
        if (data != null) {
            this.tenantId(data.tenantId);
            this.name(data.name);
            this.tenantCode(data.tenantCode);
        }
        else {
            this.tenantId(null);
            this.name(null);
            this.tenantCode(null);
        }
    };
    return tenantList;
}());
/// 
///  // SampleSinglePageApplication.DataObjects+TenantSettings
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var tenantSettings = /** @class */ (function () {
    function tenantSettings() {
        this.allowUsersToManageAvatars = ko.observable(false); //System.Boolean: AllowUsersToManageAvatars
        this.allowUsersToManageBasicProfileInfo = ko.observable(false); //System.Boolean: AllowUsersToManageBasicProfileInfo
        this.allowUsersToManageBasicProfileInfoElements = ko.observableArray([]); //System.Collections.Generic.List`1[System.String]: AllowUsersToManageBasicProfileInfoElements
        this.allowUsersToResetPasswordsForLocalLogin = ko.observable(false); //System.Boolean: AllowUsersToResetPasswordsForLocalLogin
        this.allowUsersToSignUpForLocalLogin = ko.observable(false); //System.Boolean: AllowUsersToSignUpForLocalLogin
        this.cookieDomain = ko.observable(null); //System.String: CookieDomain
        this.customAuthenticationCode = ko.observable(null); //System.String: CustomAuthenticationCode
        this.customAuthenticationName = ko.observable(null); //System.String: CustomAuthenticationName
        this.defaultCultureCode = ko.observable(null); //System.String: DefaultCultureCode
        this.defaultReplyToAddress = ko.observable(null); //System.String: DefaultReplyToAddress
        this.eitSsoUrl = ko.observable(null); //System.String: EitSsoUrl
        this.jasonWebTokenKey = ko.observable(null); //System.String: JasonWebTokenKey
        this.ldapLookupRoot = ko.observable(null); //System.String: LdapLookupRoot
        this.ldapLookupUsername = ko.observable(null); //System.String: LdapLookupUsername
        this.ldapLookupPassword = ko.observable(null); //System.String: LdapLookupPassword
        this.ldapLookupSearchBase = ko.observable(null); //System.String: LdapLookupSearchBase
        this.ldapLookupLocationAttribute = ko.observable(null); //System.String: LdapLookupLocationAttribute
        this.ldapLookupPort = ko.observable(0); //System.Int32: LdapLookupPort
        this.loginOptions = ko.observableArray([]); //System.Collections.Generic.List`1[System.String]: LoginOptions
        this.moduleHideElements = ko.observableArray([]); //System.Collections.Generic.List`1[System.String]: ModuleHideElements
        this.workSchedule = ko.observable(new workSchedule); //SampleSinglePageApplication.DataObjects+WorkSchedule: WorkSchedule
        this.requirePreExistingAccountToLogIn = ko.observable(false); //System.Boolean: RequirePreExistingAccountToLogIn
        this.listItems = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+ListItem]: ListItems
        this.externalUserDataSources = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+ExternalDataSource]: ExternalUserDataSources
    }
    tenantSettings.prototype.Load = function (data) {
        if (data != null) {
            this.allowUsersToManageAvatars(data.allowUsersToManageAvatars);
            this.allowUsersToManageBasicProfileInfo(data.allowUsersToManageBasicProfileInfo);
            this.allowUsersToManageBasicProfileInfoElements(data.allowUsersToManageBasicProfileInfoElements);
            this.allowUsersToResetPasswordsForLocalLogin(data.allowUsersToResetPasswordsForLocalLogin);
            this.allowUsersToSignUpForLocalLogin(data.allowUsersToSignUpForLocalLogin);
            this.cookieDomain(data.cookieDomain);
            this.customAuthenticationCode(data.customAuthenticationCode);
            this.customAuthenticationName(data.customAuthenticationName);
            this.defaultCultureCode(data.defaultCultureCode);
            this.defaultReplyToAddress(data.defaultReplyToAddress);
            this.eitSsoUrl(data.eitSsoUrl);
            this.jasonWebTokenKey(data.jasonWebTokenKey);
            this.ldapLookupRoot(data.ldapLookupRoot);
            this.ldapLookupUsername(data.ldapLookupUsername);
            this.ldapLookupPassword(data.ldapLookupPassword);
            this.ldapLookupSearchBase(data.ldapLookupSearchBase);
            this.ldapLookupLocationAttribute(data.ldapLookupLocationAttribute);
            this.ldapLookupPort(data.ldapLookupPort);
            this.loginOptions(data.loginOptions);
            this.moduleHideElements(data.moduleHideElements);
            this.workSchedule().Load(data.workSchedule);
            this.requirePreExistingAccountToLogIn(data.requirePreExistingAccountToLogIn);
            var __listItems_2 = [];
            if (data.listItems != null) {
                data.listItems.forEach(function (e) {
                    var item = new listItem();
                    item.Load(e);
                    __listItems_2.push(item);
                });
            }
            this.listItems(__listItems_2);
            var __externalUserDataSources_1 = [];
            if (data.externalUserDataSources != null) {
                data.externalUserDataSources.forEach(function (e) {
                    var item = new externalDataSource();
                    item.Load(e);
                    __externalUserDataSources_1.push(item);
                });
            }
            this.externalUserDataSources(__externalUserDataSources_1);
        }
        else {
            this.allowUsersToManageAvatars(false);
            this.allowUsersToManageBasicProfileInfo(false);
            this.allowUsersToManageBasicProfileInfoElements([]);
            this.allowUsersToResetPasswordsForLocalLogin(false);
            this.allowUsersToSignUpForLocalLogin(false);
            this.cookieDomain(null);
            this.customAuthenticationCode(null);
            this.customAuthenticationName(null);
            this.defaultCultureCode(null);
            this.defaultReplyToAddress(null);
            this.eitSsoUrl(null);
            this.jasonWebTokenKey(null);
            this.ldapLookupRoot(null);
            this.ldapLookupUsername(null);
            this.ldapLookupPassword(null);
            this.ldapLookupSearchBase(null);
            this.ldapLookupLocationAttribute(null);
            this.ldapLookupPort(0);
            this.loginOptions([]);
            this.moduleHideElements([]);
            this.workSchedule(new workSchedule);
            this.requirePreExistingAccountToLogIn(false);
            this.listItems([]);
            this.externalUserDataSources([]);
        }
    };
    return tenantSettings;
}());
/// 
///  // SampleSinglePageApplication.DataObjects+TodoUserAuto
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var todoUserAuto = /** @class */ (function (_super) {
    __extends(todoUserAuto, _super);
    function todoUserAuto() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.savedFiltersDepartmentsAuto = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+SavedFilterDepartmentsAuto]: SavedFiltersDepartmentsAuto
        _this.savedFiltersDepartmentGroupsAuto = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+SavedFilterDepartmentGroupsAuto]: SavedFiltersDepartmentGroupsAuto
        _this.savedFiltersFileStoragesAuto = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+SavedFilterFileStoragesAuto]: SavedFiltersFileStoragesAuto
        _this.savedFiltersSettingsAuto = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+SavedFilterSettingsAuto]: SavedFiltersSettingsAuto
        _this.savedFiltersTenantsAuto = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+SavedFilterTenantsAuto]: SavedFiltersTenantsAuto
        _this.savedFiltersUsersAuto = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+SavedFilterUsersAuto]: SavedFiltersUsersAuto
        _this.savedFiltersUserGroupsAuto = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+SavedFilterUserGroupsAuto]: SavedFiltersUserGroupsAuto
        return _this;
    }
    todoUserAuto.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            var __savedFiltersDepartmentsAuto_1 = [];
            if (data.savedFiltersDepartmentsAuto != null) {
                data.savedFiltersDepartmentsAuto.forEach(function (e) {
                    var item = new savedFilterDepartmentsAuto();
                    item.Load(e);
                    __savedFiltersDepartmentsAuto_1.push(item);
                });
            }
            this.savedFiltersDepartmentsAuto(__savedFiltersDepartmentsAuto_1);
            var __savedFiltersDepartmentGroupsAuto_1 = [];
            if (data.savedFiltersDepartmentGroupsAuto != null) {
                data.savedFiltersDepartmentGroupsAuto.forEach(function (e) {
                    var item = new savedFilterDepartmentGroupsAuto();
                    item.Load(e);
                    __savedFiltersDepartmentGroupsAuto_1.push(item);
                });
            }
            this.savedFiltersDepartmentGroupsAuto(__savedFiltersDepartmentGroupsAuto_1);
            var __savedFiltersFileStoragesAuto_1 = [];
            if (data.savedFiltersFileStoragesAuto != null) {
                data.savedFiltersFileStoragesAuto.forEach(function (e) {
                    var item = new savedFilterFileStoragesAuto();
                    item.Load(e);
                    __savedFiltersFileStoragesAuto_1.push(item);
                });
            }
            this.savedFiltersFileStoragesAuto(__savedFiltersFileStoragesAuto_1);
            var __savedFiltersSettingsAuto_1 = [];
            if (data.savedFiltersSettingsAuto != null) {
                data.savedFiltersSettingsAuto.forEach(function (e) {
                    var item = new savedFilterSettingsAuto();
                    item.Load(e);
                    __savedFiltersSettingsAuto_1.push(item);
                });
            }
            this.savedFiltersSettingsAuto(__savedFiltersSettingsAuto_1);
            var __savedFiltersTenantsAuto_1 = [];
            if (data.savedFiltersTenantsAuto != null) {
                data.savedFiltersTenantsAuto.forEach(function (e) {
                    var item = new savedFilterTenantsAuto();
                    item.Load(e);
                    __savedFiltersTenantsAuto_1.push(item);
                });
            }
            this.savedFiltersTenantsAuto(__savedFiltersTenantsAuto_1);
            var __savedFiltersUsersAuto_1 = [];
            if (data.savedFiltersUsersAuto != null) {
                data.savedFiltersUsersAuto.forEach(function (e) {
                    var item = new savedFilterUsersAuto();
                    item.Load(e);
                    __savedFiltersUsersAuto_1.push(item);
                });
            }
            this.savedFiltersUsersAuto(__savedFiltersUsersAuto_1);
            var __savedFiltersUserGroupsAuto_1 = [];
            if (data.savedFiltersUserGroupsAuto != null) {
                data.savedFiltersUserGroupsAuto.forEach(function (e) {
                    var item = new savedFilterUserGroupsAuto();
                    item.Load(e);
                    __savedFiltersUserGroupsAuto_1.push(item);
                });
            }
            this.savedFiltersUserGroupsAuto(__savedFiltersUserGroupsAuto_1);
        }
        else {
            this.savedFiltersDepartmentsAuto([]);
            this.savedFiltersDepartmentGroupsAuto([]);
            this.savedFiltersFileStoragesAuto([]);
            this.savedFiltersSettingsAuto([]);
            this.savedFiltersTenantsAuto([]);
            this.savedFiltersUsersAuto([]);
            this.savedFiltersUserGroupsAuto([]);
        }
    };
    return todoUserAuto;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+udfLabel
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var udfLabel = /** @class */ (function () {
    function udfLabel() {
        this.id = ko.observable(null); //System.Guid: Id
        this.tenantId = ko.observable(null); //System.Guid: TenantId
        this.module = ko.observable(null); //System.String: Module
        this.udf = ko.observable(null); //System.String: udf
        this.label = ko.observable(null); //System.String: Label
        this.showColumn = ko.observable(false); //System.Boolean: ShowColumn
        this.showInFilter = ko.observable(false); //System.Boolean: ShowInFilter
        this.includeInSearch = ko.observable(false); //System.Boolean: IncludeInSearch
        this.filterOptions = ko.observableArray([]); //System.Collections.Generic.List`1[System.String]: FilterOptions
    }
    udfLabel.prototype.Load = function (data) {
        if (data != null) {
            this.id(data.id);
            this.tenantId(data.tenantId);
            this.module(data.module);
            this.udf(data.udf);
            this.label(data.label);
            this.showColumn(data.showColumn);
            this.showInFilter(data.showInFilter);
            this.includeInSearch(data.includeInSearch);
            this.filterOptions(data.filterOptions);
        }
        else {
            this.id(null);
            this.tenantId(null);
            this.module(null);
            this.udf(null);
            this.label(null);
            this.showColumn(false);
            this.showInFilter(false);
            this.includeInSearch(false);
            this.filterOptions([]);
        }
    };
    return udfLabel;
}());
/// 
///  // SampleSinglePageApplication.DataObjects+User
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var user = /** @class */ (function (_super) {
    __extends(user, _super);
    function user() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.userId = ko.observable(null); //System.Guid: UserId
        _this.tenantId = ko.observable(null); //System.Guid: TenantId
        _this.firstName = ko.observable(null); //System.String: FirstName
        _this.lastName = ko.observable(null); //System.String: LastName
        _this.displayName = ko.observable(null); //System.String: DisplayName
        _this.email = ko.observable(null); //System.String: Email
        _this.phone = ko.observable(null); //System.String: Phone
        _this.username = ko.observable(null); //System.String: Username
        _this.employeeId = ko.observable(null); //System.String: EmployeeId
        _this.departmentId = ko.observable(null); //System.Nullable`1[System.Guid]: DepartmentId
        _this.departmentName = ko.observable(null); //System.String: DepartmentName
        _this.title = ko.observable(null); //System.String: Title
        _this.location = ko.observable(null); //System.String: Location
        _this.enabled = ko.observable(false); //System.Boolean: Enabled
        _this.lastLogin = ko.observable(null); //System.Nullable`1[System.DateTime]: LastLogin
        _this.admin = ko.observable(false); //System.Boolean: Admin
        _this.appAdmin = ko.observable(false); //System.Boolean: AppAdmin
        _this.photo = ko.observable(null); //System.Nullable`1[System.Guid]: Photo
        _this.password = ko.observable(null); //System.String: Password
        _this.preventPasswordChange = ko.observable(false); //System.Boolean: PreventPasswordChange
        _this.hasLocalPassword = ko.observable(false); //System.Boolean: HasLocalPassword
        _this.authToken = ko.observable(null); //System.String: AuthToken
        _this.failedLoginAttempts = ko.observable(0); //System.Int32: FailedLoginAttempts
        _this.lastLockoutDate = ko.observable(null); //System.Nullable`1[System.DateTime]: LastLockoutDate
        _this.tenants = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+Tenant]: Tenants
        _this.userTenants = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+UserTenant]: UserTenants
        _this.source = ko.observable(null); //System.String: Source
        _this.udf01 = ko.observable(null); //System.String: udf01
        _this.udf02 = ko.observable(null); //System.String: udf02
        _this.udf03 = ko.observable(null); //System.String: udf03
        _this.udf04 = ko.observable(null); //System.String: udf04
        _this.udf05 = ko.observable(null); //System.String: udf05
        _this.udf06 = ko.observable(null); //System.String: udf06
        _this.udf07 = ko.observable(null); //System.String: udf07
        _this.udf08 = ko.observable(null); //System.String: udf08
        _this.udf09 = ko.observable(null); //System.String: udf09
        _this.udf10 = ko.observable(null); //System.String: udf10
        _this.savedFiltersDepartmentsAuto = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+SavedFilterDepartmentsAuto]: SavedFiltersDepartmentsAuto
        _this.savedFiltersDepartmentGroupsAuto = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+SavedFilterDepartmentGroupsAuto]: SavedFiltersDepartmentGroupsAuto
        _this.savedFiltersFileStoragesAuto = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+SavedFilterFileStoragesAuto]: SavedFiltersFileStoragesAuto
        _this.savedFiltersSettingsAuto = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+SavedFilterSettingsAuto]: SavedFiltersSettingsAuto
        _this.savedFiltersTenantsAuto = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+SavedFilterTenantsAuto]: SavedFiltersTenantsAuto
        _this.savedFiltersUsersAuto = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+SavedFilterUsersAuto]: SavedFiltersUsersAuto
        _this.savedFiltersUserGroupsAuto = ko.observableArray([]); //System.Collections.Generic.List`1[SampleSinglePageApplication.DataObjects+SavedFilterUserGroupsAuto]: SavedFiltersUserGroupsAuto
        return _this;
    }
    user.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.userId(data.userId);
            this.tenantId(data.tenantId);
            this.firstName(data.firstName);
            this.lastName(data.lastName);
            this.displayName(data.displayName);
            this.email(data.email);
            this.phone(data.phone);
            this.username(data.username);
            this.employeeId(data.employeeId);
            this.departmentId(data.departmentId);
            this.departmentName(data.departmentName);
            this.title(data.title);
            this.location(data.location);
            this.enabled(data.enabled);
            this.lastLogin(data.lastLogin);
            this.admin(data.admin);
            this.appAdmin(data.appAdmin);
            this.photo(data.photo);
            this.password(data.password);
            this.preventPasswordChange(data.preventPasswordChange);
            this.hasLocalPassword(data.hasLocalPassword);
            this.authToken(data.authToken);
            this.failedLoginAttempts(data.failedLoginAttempts);
            this.lastLockoutDate(data.lastLockoutDate);
            var __tenants_1 = [];
            if (data.tenants != null) {
                data.tenants.forEach(function (e) {
                    var item = new tenant();
                    item.Load(e);
                    __tenants_1.push(item);
                });
            }
            this.tenants(__tenants_1);
            var __userTenants_1 = [];
            if (data.userTenants != null) {
                data.userTenants.forEach(function (e) {
                    var item = new userTenant();
                    item.Load(e);
                    __userTenants_1.push(item);
                });
            }
            this.userTenants(__userTenants_1);
            this.source(data.source);
            this.udf01(data.udf01);
            this.udf02(data.udf02);
            this.udf03(data.udf03);
            this.udf04(data.udf04);
            this.udf05(data.udf05);
            this.udf06(data.udf06);
            this.udf07(data.udf07);
            this.udf08(data.udf08);
            this.udf09(data.udf09);
            this.udf10(data.udf10);
            var __savedFiltersDepartmentsAuto_2 = [];
            if (data.savedFiltersDepartmentsAuto != null) {
                data.savedFiltersDepartmentsAuto.forEach(function (e) {
                    var item = new savedFilterDepartmentsAuto();
                    item.Load(e);
                    __savedFiltersDepartmentsAuto_2.push(item);
                });
            }
            this.savedFiltersDepartmentsAuto(__savedFiltersDepartmentsAuto_2);
            var __savedFiltersDepartmentGroupsAuto_2 = [];
            if (data.savedFiltersDepartmentGroupsAuto != null) {
                data.savedFiltersDepartmentGroupsAuto.forEach(function (e) {
                    var item = new savedFilterDepartmentGroupsAuto();
                    item.Load(e);
                    __savedFiltersDepartmentGroupsAuto_2.push(item);
                });
            }
            this.savedFiltersDepartmentGroupsAuto(__savedFiltersDepartmentGroupsAuto_2);
            var __savedFiltersFileStoragesAuto_2 = [];
            if (data.savedFiltersFileStoragesAuto != null) {
                data.savedFiltersFileStoragesAuto.forEach(function (e) {
                    var item = new savedFilterFileStoragesAuto();
                    item.Load(e);
                    __savedFiltersFileStoragesAuto_2.push(item);
                });
            }
            this.savedFiltersFileStoragesAuto(__savedFiltersFileStoragesAuto_2);
            var __savedFiltersSettingsAuto_2 = [];
            if (data.savedFiltersSettingsAuto != null) {
                data.savedFiltersSettingsAuto.forEach(function (e) {
                    var item = new savedFilterSettingsAuto();
                    item.Load(e);
                    __savedFiltersSettingsAuto_2.push(item);
                });
            }
            this.savedFiltersSettingsAuto(__savedFiltersSettingsAuto_2);
            var __savedFiltersTenantsAuto_2 = [];
            if (data.savedFiltersTenantsAuto != null) {
                data.savedFiltersTenantsAuto.forEach(function (e) {
                    var item = new savedFilterTenantsAuto();
                    item.Load(e);
                    __savedFiltersTenantsAuto_2.push(item);
                });
            }
            this.savedFiltersTenantsAuto(__savedFiltersTenantsAuto_2);
            var __savedFiltersUsersAuto_2 = [];
            if (data.savedFiltersUsersAuto != null) {
                data.savedFiltersUsersAuto.forEach(function (e) {
                    var item = new savedFilterUsersAuto();
                    item.Load(e);
                    __savedFiltersUsersAuto_2.push(item);
                });
            }
            this.savedFiltersUsersAuto(__savedFiltersUsersAuto_2);
            var __savedFiltersUserGroupsAuto_2 = [];
            if (data.savedFiltersUserGroupsAuto != null) {
                data.savedFiltersUserGroupsAuto.forEach(function (e) {
                    var item = new savedFilterUserGroupsAuto();
                    item.Load(e);
                    __savedFiltersUserGroupsAuto_2.push(item);
                });
            }
            this.savedFiltersUserGroupsAuto(__savedFiltersUserGroupsAuto_2);
        }
        else {
            this.userId(null);
            this.tenantId(null);
            this.firstName(null);
            this.lastName(null);
            this.displayName(null);
            this.email(null);
            this.phone(null);
            this.username(null);
            this.employeeId(null);
            this.departmentId(null);
            this.departmentName(null);
            this.title(null);
            this.location(null);
            this.enabled(false);
            this.lastLogin(null);
            this.admin(false);
            this.appAdmin(false);
            this.photo(null);
            this.password(null);
            this.preventPasswordChange(false);
            this.hasLocalPassword(false);
            this.authToken(null);
            this.failedLoginAttempts(0);
            this.lastLockoutDate(null);
            this.tenants([]);
            this.userTenants([]);
            this.source(null);
            this.udf01(null);
            this.udf02(null);
            this.udf03(null);
            this.udf04(null);
            this.udf05(null);
            this.udf06(null);
            this.udf07(null);
            this.udf08(null);
            this.udf09(null);
            this.udf10(null);
            this.savedFiltersDepartmentsAuto([]);
            this.savedFiltersDepartmentGroupsAuto([]);
            this.savedFiltersFileStoragesAuto([]);
            this.savedFiltersSettingsAuto([]);
            this.savedFiltersTenantsAuto([]);
            this.savedFiltersUsersAuto([]);
            this.savedFiltersUserGroupsAuto([]);
        }
    };
    return user;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+UserGroup
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var userGroup = /** @class */ (function (_super) {
    __extends(userGroup, _super);
    function userGroup() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.groupId = ko.observable(null); //System.Guid: GroupId
        _this.tenantId = ko.observable(null); //System.Guid: TenantId
        _this.name = ko.observable(null); //System.String: Name
        _this.enabled = ko.observable(false); //System.Boolean: Enabled
        _this.users = ko.observableArray([]); //System.Collections.Generic.List`1[System.Guid]: Users
        _this.settings = ko.observable(new userGroupSettings); //SampleSinglePageApplication.DataObjects+UserGroupSettings: Settings
        return _this;
    }
    userGroup.prototype.Load = function (data) {
        _super.prototype.Load.call(this, data);
        if (data != null) {
            this.groupId(data.groupId);
            this.tenantId(data.tenantId);
            this.name(data.name);
            this.enabled(data.enabled);
            this.users(data.users);
            this.settings().Load(data.settings);
        }
        else {
            this.groupId(null);
            this.tenantId(null);
            this.name(null);
            this.enabled(false);
            this.users([]);
            this.settings(new userGroupSettings);
        }
    };
    return userGroup;
}(actionResponseObject));
/// 
///  // SampleSinglePageApplication.DataObjects+UserGroupSettings
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var userGroupSettings = /** @class */ (function () {
    function userGroupSettings() {
        this.someSetting = ko.observable(null); //System.String: SomeSetting
    }
    userGroupSettings.prototype.Load = function (data) {
        if (data != null) {
            this.someSetting(data.someSetting);
        }
        else {
            this.someSetting(null);
        }
    };
    return userGroupSettings;
}());
/// 
///  // SampleSinglePageApplication.DataObjects+UserPasswordReset
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var userPasswordReset = /** @class */ (function () {
    function userPasswordReset() {
        this.userId = ko.observable(null); //System.Guid: UserId
        this.tenantId = ko.observable(null); //System.Guid: TenantId
        this.currentPassword = ko.observable(null); //System.String: CurrentPassword
        this.newPassword = ko.observable(null); //System.String: NewPassword
    }
    userPasswordReset.prototype.Load = function (data) {
        if (data != null) {
            this.userId(data.userId);
            this.tenantId(data.tenantId);
            this.currentPassword(data.currentPassword);
            this.newPassword(data.newPassword);
        }
        else {
            this.userId(null);
            this.tenantId(null);
            this.currentPassword(null);
            this.newPassword(null);
        }
    };
    return userPasswordReset;
}());
/// 
///  // SampleSinglePageApplication.DataObjects+UserTenant
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var userTenant = /** @class */ (function () {
    function userTenant() {
        this.userId = ko.observable(null); //System.Guid: UserId
        this.tenantId = ko.observable(null); //System.Guid: TenantId
        this.tenantCode = ko.observable(null); //System.String: TenantCode
        this.tenantName = ko.observable(null); //System.String: TenantName
    }
    userTenant.prototype.Load = function (data) {
        if (data != null) {
            this.userId(data.userId);
            this.tenantId(data.tenantId);
            this.tenantCode(data.tenantCode);
            this.tenantName(data.tenantName);
        }
        else {
            this.userId(null);
            this.tenantId(null);
            this.tenantCode(null);
            this.tenantName(null);
        }
    };
    return userTenant;
}());
/// 
///  // SampleSinglePageApplication.DataObjects+VersionInfo
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var versionInfo = /** @class */ (function () {
    function versionInfo() {
        this.released = ko.observable(new Date); //System.DateTime: Released
        this.runningSince = ko.observable(0); //System.Double: RunningSince
        this.version = ko.observable(null); //System.String: Version
    }
    versionInfo.prototype.Load = function (data) {
        if (data != null) {
            this.released(data.released);
            this.runningSince(data.runningSince);
            this.version(data.version);
        }
        else {
            this.released(new Date);
            this.runningSince(0);
            this.version(null);
        }
    };
    return versionInfo;
}());
/// 
///  // SampleSinglePageApplication.DataObjects+WorkSchedule
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
var workSchedule = /** @class */ (function () {
    function workSchedule() {
        this.sunday = ko.observable(false); //System.Boolean: Sunday
        this.sundayAllDay = ko.observable(false); //System.Boolean: SundayAllDay
        this.sundayStart = ko.observable(null); //System.String: SundayStart
        this.sundayEnd = ko.observable(null); //System.String: SundayEnd
        this.monday = ko.observable(false); //System.Boolean: Monday
        this.mondayAllDay = ko.observable(false); //System.Boolean: MondayAllDay
        this.mondayStart = ko.observable(null); //System.String: MondayStart
        this.mondayEnd = ko.observable(null); //System.String: MondayEnd
        this.tuesday = ko.observable(false); //System.Boolean: Tuesday
        this.tuesdayAllDay = ko.observable(false); //System.Boolean: TuesdayAllDay
        this.tuesdayStart = ko.observable(null); //System.String: TuesdayStart
        this.tuesdayEnd = ko.observable(null); //System.String: TuesdayEnd
        this.wednesday = ko.observable(false); //System.Boolean: Wednesday
        this.wednesdayAllDay = ko.observable(false); //System.Boolean: WednesdayAllDay
        this.wednesdayStart = ko.observable(null); //System.String: WednesdayStart
        this.wednesdayEnd = ko.observable(null); //System.String: WednesdayEnd
        this.thursday = ko.observable(false); //System.Boolean: Thursday
        this.thursdayAllDay = ko.observable(false); //System.Boolean: ThursdayAllDay
        this.thursdayStart = ko.observable(null); //System.String: ThursdayStart
        this.thursdayEnd = ko.observable(null); //System.String: ThursdayEnd
        this.friday = ko.observable(false); //System.Boolean: Friday
        this.fridayAllDay = ko.observable(false); //System.Boolean: FridayAllDay
        this.fridayStart = ko.observable(null); //System.String: FridayStart
        this.fridayEnd = ko.observable(null); //System.String: FridayEnd
        this.saturday = ko.observable(false); //System.Boolean: Saturday
        this.saturdayAllDay = ko.observable(false); //System.Boolean: SaturdayAllDay
        this.saturdayStart = ko.observable(null); //System.String: SaturdayStart
        this.saturdayEnd = ko.observable(null); //System.String: SaturdayEnd
    }
    workSchedule.prototype.Load = function (data) {
        if (data != null) {
            this.sunday(data.sunday);
            this.sundayAllDay(data.sundayAllDay);
            this.sundayStart(data.sundayStart);
            this.sundayEnd(data.sundayEnd);
            this.monday(data.monday);
            this.mondayAllDay(data.mondayAllDay);
            this.mondayStart(data.mondayStart);
            this.mondayEnd(data.mondayEnd);
            this.tuesday(data.tuesday);
            this.tuesdayAllDay(data.tuesdayAllDay);
            this.tuesdayStart(data.tuesdayStart);
            this.tuesdayEnd(data.tuesdayEnd);
            this.wednesday(data.wednesday);
            this.wednesdayAllDay(data.wednesdayAllDay);
            this.wednesdayStart(data.wednesdayStart);
            this.wednesdayEnd(data.wednesdayEnd);
            this.thursday(data.thursday);
            this.thursdayAllDay(data.thursdayAllDay);
            this.thursdayStart(data.thursdayStart);
            this.thursdayEnd(data.thursdayEnd);
            this.friday(data.friday);
            this.fridayAllDay(data.fridayAllDay);
            this.fridayStart(data.fridayStart);
            this.fridayEnd(data.fridayEnd);
            this.saturday(data.saturday);
            this.saturdayAllDay(data.saturdayAllDay);
            this.saturdayStart(data.saturdayStart);
            this.saturdayEnd(data.saturdayEnd);
        }
        else {
            this.sunday(false);
            this.sundayAllDay(false);
            this.sundayStart(null);
            this.sundayEnd(null);
            this.monday(false);
            this.mondayAllDay(false);
            this.mondayStart(null);
            this.mondayEnd(null);
            this.tuesday(false);
            this.tuesdayAllDay(false);
            this.tuesdayStart(null);
            this.tuesdayEnd(null);
            this.wednesday(false);
            this.wednesdayAllDay(false);
            this.wednesdayStart(null);
            this.wednesdayEnd(null);
            this.thursday(false);
            this.thursdayAllDay(false);
            this.thursdayStart(null);
            this.thursdayEnd(null);
            this.friday(false);
            this.fridayAllDay(false);
            this.fridayStart(null);
            this.fridayEnd(null);
            this.saturday(false);
            this.saturdayAllDay(false);
            this.saturdayStart(null);
            this.saturdayEnd(null);
        }
    };
    return workSchedule;
}());
//# sourceMappingURL=Models.SampleSinglePageApplication.Auto.js.map
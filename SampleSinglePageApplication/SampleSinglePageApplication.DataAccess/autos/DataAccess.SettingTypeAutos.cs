/// 
/// SettingType
/// 
/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
///
namespace SampleSinglePageApplication;
public partial interface IDataAccess
{
	static DataObjects.SettingType? ConvertSettingTypeFromString(string? value) => throw new NotImplementedException();
	static string ConvertSettingTypeToString(DataObjects.SettingType? value) => throw new NotImplementedException();
}

public partial class DataAccess
{
	public static DataObjects.SettingType? ConvertSettingTypeFromString(string? value)  //SampleSinglePageApplication.DataObjects+SettingType
	{
		DataObjects.SettingType? output = null;

		if (!string.IsNullOrWhiteSpace(value)) {
			var lowerValue = ("" + value.ToString()).ToLower();
			switch (lowerValue) {
				case "boolean":
					output = DataObjects.SettingType.Boolean;
					break;
				case "datetime":
					output = DataObjects.SettingType.DateTime;
					break;
				case "encryptedtext":
					output = DataObjects.SettingType.EncryptedText;
					break;
				case "guid":
					output = DataObjects.SettingType.Guid;
					break;
				case "numberdecimal":
					output = DataObjects.SettingType.NumberDecimal;
					break;
				case "numberdouble":
					output = DataObjects.SettingType.NumberDouble;
					break;
				case "numberint":
					output = DataObjects.SettingType.NumberInt;
					break;
				case "object":
					output = DataObjects.SettingType.Object;
					break;
				case "text":
					output = DataObjects.SettingType.Text;
					break;
				default:
					break;
			}
		}

		return output;
	}
	///
	/// SettingType
	///
	/// WARNING: AUTO GENERATED FILE - DO NOT MODIFY BY HAND
	/// GENERATED BY: SampleSinglePageApplication.Transcriber console application.
	///   To regenerate the file, first update the path varibale in the program.cs then run the console app.
	///
	public static string ConvertSettingTypeToString(DataObjects.SettingType? value) //SampleSinglePageApplication.DataObjects+SettingType
	{
		var output = "";

		if (value != null)
		{
			switch (value)
			{
				case DataObjects.SettingType.Boolean:
					output = "boolean";
					break;
				case DataObjects.SettingType.DateTime:
					output = "datetime";
					break;
				case DataObjects.SettingType.EncryptedText:
					output = "encryptedtext";
					break;
				case DataObjects.SettingType.Guid:
					output = "guid";
					break;
				case DataObjects.SettingType.NumberDecimal:
					output = "numberdecimal";
					break;
				case DataObjects.SettingType.NumberDouble:
					output = "numberdouble";
					break;
				case DataObjects.SettingType.NumberInt:
					output = "numberint";
					break;
				case DataObjects.SettingType.Object:
					output = "object";
					break;
				case DataObjects.SettingType.Text:
					output = "text";
					break;
			default:
				break;
			}
		}

		return output;
	}

}
